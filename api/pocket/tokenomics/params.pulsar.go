// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package tokenomics

import (
	_ "cosmossdk.io/api/amino"
	binary "encoding/binary"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	math "math"
	reflect "reflect"
	sync "sync"
)

var (
	md_Params                             protoreflect.MessageDescriptor
	fd_Params_mint_allocation_percentages protoreflect.FieldDescriptor
	fd_Params_dao_reward_address          protoreflect.FieldDescriptor
	fd_Params_global_inflation_per_claim  protoreflect.FieldDescriptor
)

func init() {
	file_pocket_tokenomics_params_proto_init()
	md_Params = File_pocket_tokenomics_params_proto.Messages().ByName("Params")
	fd_Params_mint_allocation_percentages = md_Params.Fields().ByName("mint_allocation_percentages")
	fd_Params_dao_reward_address = md_Params.Fields().ByName("dao_reward_address")
	fd_Params_global_inflation_per_claim = md_Params.Fields().ByName("global_inflation_per_claim")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_pocket_tokenomics_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MintAllocationPercentages != nil {
		value := protoreflect.ValueOfMessage(x.MintAllocationPercentages.ProtoReflect())
		if !f(fd_Params_mint_allocation_percentages, value) {
			return
		}
	}
	if x.DaoRewardAddress != "" {
		value := protoreflect.ValueOfString(x.DaoRewardAddress)
		if !f(fd_Params_dao_reward_address, value) {
			return
		}
	}
	if x.GlobalInflationPerClaim != float64(0) || math.Signbit(x.GlobalInflationPerClaim) {
		value := protoreflect.ValueOfFloat64(x.GlobalInflationPerClaim)
		if !f(fd_Params_global_inflation_per_claim, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		return x.MintAllocationPercentages != nil
	case "pocket.tokenomics.Params.dao_reward_address":
		return x.DaoRewardAddress != ""
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		return x.GlobalInflationPerClaim != float64(0) || math.Signbit(x.GlobalInflationPerClaim)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		x.MintAllocationPercentages = nil
	case "pocket.tokenomics.Params.dao_reward_address":
		x.DaoRewardAddress = ""
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		x.GlobalInflationPerClaim = float64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		value := x.MintAllocationPercentages
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pocket.tokenomics.Params.dao_reward_address":
		value := x.DaoRewardAddress
		return protoreflect.ValueOfString(value)
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		value := x.GlobalInflationPerClaim
		return protoreflect.ValueOfFloat64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		x.MintAllocationPercentages = value.Message().Interface().(*MintAllocationPercentages)
	case "pocket.tokenomics.Params.dao_reward_address":
		x.DaoRewardAddress = value.Interface().(string)
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		x.GlobalInflationPerClaim = value.Float()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		if x.MintAllocationPercentages == nil {
			x.MintAllocationPercentages = new(MintAllocationPercentages)
		}
		return protoreflect.ValueOfMessage(x.MintAllocationPercentages.ProtoReflect())
	case "pocket.tokenomics.Params.dao_reward_address":
		panic(fmt.Errorf("field dao_reward_address of message pocket.tokenomics.Params is not mutable"))
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		panic(fmt.Errorf("field global_inflation_per_claim of message pocket.tokenomics.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pocket.tokenomics.Params.mint_allocation_percentages":
		m := new(MintAllocationPercentages)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pocket.tokenomics.Params.dao_reward_address":
		return protoreflect.ValueOfString("")
	case "pocket.tokenomics.Params.global_inflation_per_claim":
		return protoreflect.ValueOfFloat64(float64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.Params"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pocket.tokenomics.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MintAllocationPercentages != nil {
			l = options.Size(x.MintAllocationPercentages)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaoRewardAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.GlobalInflationPerClaim != 0 || math.Signbit(x.GlobalInflationPerClaim) {
			n += 9
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.GlobalInflationPerClaim != 0 || math.Signbit(x.GlobalInflationPerClaim) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.GlobalInflationPerClaim))))
			i--
			dAtA[i] = 0x39
		}
		if len(x.DaoRewardAddress) > 0 {
			i -= len(x.DaoRewardAddress)
			copy(dAtA[i:], x.DaoRewardAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaoRewardAddress)))
			i--
			dAtA[i] = 0x32
		}
		if x.MintAllocationPercentages != nil {
			encoded, err := options.Marshal(x.MintAllocationPercentages)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MintAllocationPercentages", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MintAllocationPercentages == nil {
					x.MintAllocationPercentages = &MintAllocationPercentages{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MintAllocationPercentages); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaoRewardAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaoRewardAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GlobalInflationPerClaim", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.GlobalInflationPerClaim = float64(math.Float64frombits(v))
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MintAllocationPercentages              protoreflect.MessageDescriptor
	fd_MintAllocationPercentages_dao          protoreflect.FieldDescriptor
	fd_MintAllocationPercentages_proposer     protoreflect.FieldDescriptor
	fd_MintAllocationPercentages_supplier     protoreflect.FieldDescriptor
	fd_MintAllocationPercentages_source_owner protoreflect.FieldDescriptor
	fd_MintAllocationPercentages_application  protoreflect.FieldDescriptor
)

func init() {
	file_pocket_tokenomics_params_proto_init()
	md_MintAllocationPercentages = File_pocket_tokenomics_params_proto.Messages().ByName("MintAllocationPercentages")
	fd_MintAllocationPercentages_dao = md_MintAllocationPercentages.Fields().ByName("dao")
	fd_MintAllocationPercentages_proposer = md_MintAllocationPercentages.Fields().ByName("proposer")
	fd_MintAllocationPercentages_supplier = md_MintAllocationPercentages.Fields().ByName("supplier")
	fd_MintAllocationPercentages_source_owner = md_MintAllocationPercentages.Fields().ByName("source_owner")
	fd_MintAllocationPercentages_application = md_MintAllocationPercentages.Fields().ByName("application")
}

var _ protoreflect.Message = (*fastReflection_MintAllocationPercentages)(nil)

type fastReflection_MintAllocationPercentages MintAllocationPercentages

func (x *MintAllocationPercentages) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MintAllocationPercentages)(x)
}

func (x *MintAllocationPercentages) slowProtoReflect() protoreflect.Message {
	mi := &file_pocket_tokenomics_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MintAllocationPercentages_messageType fastReflection_MintAllocationPercentages_messageType
var _ protoreflect.MessageType = fastReflection_MintAllocationPercentages_messageType{}

type fastReflection_MintAllocationPercentages_messageType struct{}

func (x fastReflection_MintAllocationPercentages_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MintAllocationPercentages)(nil)
}
func (x fastReflection_MintAllocationPercentages_messageType) New() protoreflect.Message {
	return new(fastReflection_MintAllocationPercentages)
}
func (x fastReflection_MintAllocationPercentages_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MintAllocationPercentages
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MintAllocationPercentages) Descriptor() protoreflect.MessageDescriptor {
	return md_MintAllocationPercentages
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MintAllocationPercentages) Type() protoreflect.MessageType {
	return _fastReflection_MintAllocationPercentages_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MintAllocationPercentages) New() protoreflect.Message {
	return new(fastReflection_MintAllocationPercentages)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MintAllocationPercentages) Interface() protoreflect.ProtoMessage {
	return (*MintAllocationPercentages)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MintAllocationPercentages) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Dao != float64(0) || math.Signbit(x.Dao) {
		value := protoreflect.ValueOfFloat64(x.Dao)
		if !f(fd_MintAllocationPercentages_dao, value) {
			return
		}
	}
	if x.Proposer != float64(0) || math.Signbit(x.Proposer) {
		value := protoreflect.ValueOfFloat64(x.Proposer)
		if !f(fd_MintAllocationPercentages_proposer, value) {
			return
		}
	}
	if x.Supplier != float64(0) || math.Signbit(x.Supplier) {
		value := protoreflect.ValueOfFloat64(x.Supplier)
		if !f(fd_MintAllocationPercentages_supplier, value) {
			return
		}
	}
	if x.SourceOwner != float64(0) || math.Signbit(x.SourceOwner) {
		value := protoreflect.ValueOfFloat64(x.SourceOwner)
		if !f(fd_MintAllocationPercentages_source_owner, value) {
			return
		}
	}
	if x.Application != float64(0) || math.Signbit(x.Application) {
		value := protoreflect.ValueOfFloat64(x.Application)
		if !f(fd_MintAllocationPercentages_application, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MintAllocationPercentages) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		return x.Dao != float64(0) || math.Signbit(x.Dao)
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		return x.Proposer != float64(0) || math.Signbit(x.Proposer)
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		return x.Supplier != float64(0) || math.Signbit(x.Supplier)
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		return x.SourceOwner != float64(0) || math.Signbit(x.SourceOwner)
	case "pocket.tokenomics.MintAllocationPercentages.application":
		return x.Application != float64(0) || math.Signbit(x.Application)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MintAllocationPercentages) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		x.Dao = float64(0)
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		x.Proposer = float64(0)
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		x.Supplier = float64(0)
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		x.SourceOwner = float64(0)
	case "pocket.tokenomics.MintAllocationPercentages.application":
		x.Application = float64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MintAllocationPercentages) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		value := x.Dao
		return protoreflect.ValueOfFloat64(value)
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		value := x.Proposer
		return protoreflect.ValueOfFloat64(value)
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		value := x.Supplier
		return protoreflect.ValueOfFloat64(value)
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		value := x.SourceOwner
		return protoreflect.ValueOfFloat64(value)
	case "pocket.tokenomics.MintAllocationPercentages.application":
		value := x.Application
		return protoreflect.ValueOfFloat64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MintAllocationPercentages) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		x.Dao = value.Float()
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		x.Proposer = value.Float()
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		x.Supplier = value.Float()
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		x.SourceOwner = value.Float()
	case "pocket.tokenomics.MintAllocationPercentages.application":
		x.Application = value.Float()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MintAllocationPercentages) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		panic(fmt.Errorf("field dao of message pocket.tokenomics.MintAllocationPercentages is not mutable"))
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		panic(fmt.Errorf("field proposer of message pocket.tokenomics.MintAllocationPercentages is not mutable"))
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		panic(fmt.Errorf("field supplier of message pocket.tokenomics.MintAllocationPercentages is not mutable"))
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		panic(fmt.Errorf("field source_owner of message pocket.tokenomics.MintAllocationPercentages is not mutable"))
	case "pocket.tokenomics.MintAllocationPercentages.application":
		panic(fmt.Errorf("field application of message pocket.tokenomics.MintAllocationPercentages is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MintAllocationPercentages) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pocket.tokenomics.MintAllocationPercentages.dao":
		return protoreflect.ValueOfFloat64(float64(0))
	case "pocket.tokenomics.MintAllocationPercentages.proposer":
		return protoreflect.ValueOfFloat64(float64(0))
	case "pocket.tokenomics.MintAllocationPercentages.supplier":
		return protoreflect.ValueOfFloat64(float64(0))
	case "pocket.tokenomics.MintAllocationPercentages.source_owner":
		return protoreflect.ValueOfFloat64(float64(0))
	case "pocket.tokenomics.MintAllocationPercentages.application":
		return protoreflect.ValueOfFloat64(float64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pocket.tokenomics.MintAllocationPercentages"))
		}
		panic(fmt.Errorf("message pocket.tokenomics.MintAllocationPercentages does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MintAllocationPercentages) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pocket.tokenomics.MintAllocationPercentages", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MintAllocationPercentages) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MintAllocationPercentages) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MintAllocationPercentages) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MintAllocationPercentages) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MintAllocationPercentages)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Dao != 0 || math.Signbit(x.Dao) {
			n += 9
		}
		if x.Proposer != 0 || math.Signbit(x.Proposer) {
			n += 9
		}
		if x.Supplier != 0 || math.Signbit(x.Supplier) {
			n += 9
		}
		if x.SourceOwner != 0 || math.Signbit(x.SourceOwner) {
			n += 9
		}
		if x.Application != 0 || math.Signbit(x.Application) {
			n += 9
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MintAllocationPercentages)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Application != 0 || math.Signbit(x.Application) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.Application))))
			i--
			dAtA[i] = 0x29
		}
		if x.SourceOwner != 0 || math.Signbit(x.SourceOwner) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.SourceOwner))))
			i--
			dAtA[i] = 0x21
		}
		if x.Supplier != 0 || math.Signbit(x.Supplier) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.Supplier))))
			i--
			dAtA[i] = 0x19
		}
		if x.Proposer != 0 || math.Signbit(x.Proposer) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.Proposer))))
			i--
			dAtA[i] = 0x11
		}
		if x.Dao != 0 || math.Signbit(x.Dao) {
			i -= 8
			binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(x.Dao))))
			i--
			dAtA[i] = 0x9
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MintAllocationPercentages)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MintAllocationPercentages: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MintAllocationPercentages: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Dao", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.Dao = float64(math.Float64frombits(v))
			case 2:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.Proposer = float64(math.Float64frombits(v))
			case 3:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Supplier", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.Supplier = float64(math.Float64frombits(v))
			case 4:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SourceOwner", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.SourceOwner = float64(math.Float64frombits(v))
			case 5:
				if wireType != 1 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
				}
				var v uint64
				if (iNdEx + 8) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
				iNdEx += 8
				x.Application = float64(math.Float64frombits(v))
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: pocket/tokenomics/params.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Params defines the parameters for the tokenomics module.
type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mint_allocation_percentages represents the distribution of newly minted tokens,
	// at the end of claim settlement, as a result of the Global Mint TLM.
	MintAllocationPercentages *MintAllocationPercentages `protobuf:"bytes,1,opt,name=mint_allocation_percentages,json=mintAllocationPercentages,proto3" json:"mint_allocation_percentages,omitempty"`
	// dao_reward_address is the address to which mint_allocation_dao percentage of the
	// minted tokens are at the end of claim settlement.
	DaoRewardAddress string `protobuf:"bytes,6,opt,name=dao_reward_address,json=daoRewardAddress,proto3" json:"dao_reward_address,omitempty"` // Bech32 cosmos address
	// global_inflation_per_claim is the percentage of a claim's claimable uPOKT amount which will be minted on settlement.
	GlobalInflationPerClaim float64 `protobuf:"fixed64,7,opt,name=global_inflation_per_claim,json=globalInflationPerClaim,proto3" json:"global_inflation_per_claim,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pocket_tokenomics_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_pocket_tokenomics_params_proto_rawDescGZIP(), []int{0}
}

func (x *Params) GetMintAllocationPercentages() *MintAllocationPercentages {
	if x != nil {
		return x.MintAllocationPercentages
	}
	return nil
}

func (x *Params) GetDaoRewardAddress() string {
	if x != nil {
		return x.DaoRewardAddress
	}
	return ""
}

func (x *Params) GetGlobalInflationPerClaim() float64 {
	if x != nil {
		return x.GlobalInflationPerClaim
	}
	return 0
}

// MintAllocationPercentages represents the distribution of newly minted tokens,
// at the end of claim settlement, as a result of the Global Mint TLM.
type MintAllocationPercentages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dao is the percentage of the minted tokens which are sent
	// to the DAO reward address during claim settlement.
	Dao float64 `protobuf:"fixed64,1,opt,name=dao,proto3" json:"dao,omitempty"`
	// proposer is the percentage of the minted tokens which are sent
	// to the block proposer account address during claim settlement.
	Proposer float64 `protobuf:"fixed64,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// supplier is the percentage of the minted tokens which are sent
	// to the block supplier account address during claim settlement.
	Supplier float64 `protobuf:"fixed64,3,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// source_owner is the percentage of the minted tokens which are sent
	// to the service source owner account address during claim settlement.
	SourceOwner float64 `protobuf:"fixed64,4,opt,name=source_owner,json=sourceOwner,proto3" json:"source_owner,omitempty"`
	// allocation_application is the percentage of the minted tokens which are sent
	// to the application account address during claim settlement.
	Application float64 `protobuf:"fixed64,5,opt,name=application,proto3" json:"application,omitempty"`
}

func (x *MintAllocationPercentages) Reset() {
	*x = MintAllocationPercentages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pocket_tokenomics_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintAllocationPercentages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintAllocationPercentages) ProtoMessage() {}

// Deprecated: Use MintAllocationPercentages.ProtoReflect.Descriptor instead.
func (*MintAllocationPercentages) Descriptor() ([]byte, []int) {
	return file_pocket_tokenomics_params_proto_rawDescGZIP(), []int{1}
}

func (x *MintAllocationPercentages) GetDao() float64 {
	if x != nil {
		return x.Dao
	}
	return 0
}

func (x *MintAllocationPercentages) GetProposer() float64 {
	if x != nil {
		return x.Proposer
	}
	return 0
}

func (x *MintAllocationPercentages) GetSupplier() float64 {
	if x != nil {
		return x.Supplier
	}
	return 0
}

func (x *MintAllocationPercentages) GetSourceOwner() float64 {
	if x != nil {
		return x.SourceOwner
	}
	return 0
}

func (x *MintAllocationPercentages) GetApplication() float64 {
	if x != nil {
		return x.Application
	}
	return 0
}

var File_pocket_tokenomics_params_proto protoreflect.FileDescriptor

var file_pocket_tokenomics_params_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x63, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x63, 0x73, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x03, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x1b, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x4d, 0x69, 0x6e,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x18,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0xf2, 0xde, 0x1f, 0x22, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x52, 0x19,
	0x6d, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x12, 0x64, 0x61, 0x6f,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4b, 0xea, 0xde, 0x1f, 0x12, 0x64, 0x61, 0x6f, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0xf2, 0xde, 0x1f,
	0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x61, 0x6f, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x10, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x1a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x42, 0x43, 0xea, 0xde, 0x1f, 0x1a, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0xf2, 0xde, 0x1f, 0x21, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x52, 0x17,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x3a, 0x23, 0xe8, 0xa0, 0x1f, 0x01, 0x8a, 0xe7, 0xb0,
	0x2a, 0x1a, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x78, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd3, 0x02, 0x0a,
	0x19, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x03, 0x64, 0x61,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x15, 0xea, 0xde, 0x1f, 0x03, 0x64, 0x61, 0x6f,
	0xf2, 0xde, 0x1f, 0x0a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x61, 0x6f, 0x22, 0x52, 0x03,
	0x64, 0x61, 0x6f, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x1f, 0xea, 0xde, 0x1f, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x22, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x12, 0x3b, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x1f, 0xea, 0xde, 0x1f, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x22, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x4a, 0x0a,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x27, 0xea, 0xde, 0x1f, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x52, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42, 0x25,
	0xea, 0xde, 0x1f, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2,
	0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0xb5, 0x01, 0xa8, 0xe2, 0x1e, 0x01, 0xd8, 0xe2, 0x1e, 0x01, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6f,
	0x6d, 0x69, 0x63, 0x73, 0x42, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x22, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0xa2, 0x02, 0x03, 0x50, 0x54, 0x58, 0xaa, 0x02, 0x11,
	0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63,
	0x73, 0xca, 0x02, 0x11, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x6f, 0x6d, 0x69, 0x63, 0x73, 0xe2, 0x02, 0x1d, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x3a,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pocket_tokenomics_params_proto_rawDescOnce sync.Once
	file_pocket_tokenomics_params_proto_rawDescData = file_pocket_tokenomics_params_proto_rawDesc
)

func file_pocket_tokenomics_params_proto_rawDescGZIP() []byte {
	file_pocket_tokenomics_params_proto_rawDescOnce.Do(func() {
		file_pocket_tokenomics_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_pocket_tokenomics_params_proto_rawDescData)
	})
	return file_pocket_tokenomics_params_proto_rawDescData
}

var file_pocket_tokenomics_params_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pocket_tokenomics_params_proto_goTypes = []interface{}{
	(*Params)(nil),                    // 0: pocket.tokenomics.Params
	(*MintAllocationPercentages)(nil), // 1: pocket.tokenomics.MintAllocationPercentages
}
var file_pocket_tokenomics_params_proto_depIdxs = []int32{
	1, // 0: pocket.tokenomics.Params.mint_allocation_percentages:type_name -> pocket.tokenomics.MintAllocationPercentages
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pocket_tokenomics_params_proto_init() }
func file_pocket_tokenomics_params_proto_init() {
	if File_pocket_tokenomics_params_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pocket_tokenomics_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pocket_tokenomics_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintAllocationPercentages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pocket_tokenomics_params_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pocket_tokenomics_params_proto_goTypes,
		DependencyIndexes: file_pocket_tokenomics_params_proto_depIdxs,
		MessageInfos:      file_pocket_tokenomics_params_proto_msgTypes,
	}.Build()
	File_pocket_tokenomics_params_proto = out.File
	file_pocket_tokenomics_params_proto_rawDesc = nil
	file_pocket_tokenomics_params_proto_goTypes = nil
	file_pocket_tokenomics_params_proto_depIdxs = nil
}
