syntax = "proto3";
package pocket.shared;

// NOTE that the `shared` package is not a Cosmos module,
// but rather a manually created package to resolve circular dependencies.

option go_package = "pocket/x/shared/types";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Supplier is the type defining the actor in Pocket Network that provides RPC services.
message Supplier {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The Bech32 address of the supplier using cosmos' ScalarDescriptor to ensure deterministic deterministic encoding using cosmos' ScalarDescriptor to ensure deterministic deterministic encoding
  cosmos.base.v1beta1.Coin stake = 2; // The total amount of uPOKT the supplier has staked
  // TODO(@Olshansk): Uncomment the line below once the `ServiceId` proto is defined
  // repeated service.SupplierServiceConfig services = 3; // The service configs this supplier can support
}

