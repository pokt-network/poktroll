syntax = "proto3";

package pocket.service;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "pocket/shared/service.proto";

option go_package = "github.com/pokt-network/poktroll/x/service/types";

// Msg defines the Msg service.
service Msg {
  rpc AddService (MsgAddService) returns (MsgAddServiceResponse);
}

// MsgAddService defines a message for adding a new message to the network.
// Services can be added by any actor in the network making them truly
// permissionless.
// TODO_DOCUMENT(@h5law): This is a key function in making services
// permissionless, document it's usage and design - in docusaurus covering how
// the entire process works.
message MsgAddService {
  option (cosmos.msg.v1.signer) = "address"; // https://docs.cosmos.network/main/build/building-modules/messages-and-queries
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The Bech32 address of the service supplier using cosmos' ScalarDescriptor
  shared.Service service = 2 [(gogoproto.nullable) = false]; // The Service for which the supplier is adding to the network
}

message MsgAddServiceResponse {}

