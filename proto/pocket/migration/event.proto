syntax = "proto3";
package pocket.migration;

option go_package = "github.com/pokt-network/poktroll/x/migration/types";
option (gogoproto.stable_marshaler_all) = true;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

import "pocket/shared/service.proto";
import "pocket/migration/morse_onchain.proto";
import "pocket/application/types.proto";
import "pocket/shared/supplier.proto";

// EventImportMorseClaimableAccounts
// - Emitted when MorseClaimableAccounts are created on-chain
// - Represents import event for Morse claimable accounts
message EventImportMorseClaimableAccounts {
  // Shannon height at which MorseAccountState was created on-chain
  int64 created_at_height = 1 [(gogoproto.jsontag) = "created_at_height"];

  // On-chain computed sha256 hash of the MorseAccountState
  // - Contains all imported MorseClaimableAccounts
  bytes morse_account_state_hash = 2 [(gogoproto.jsontag) = "morse_account_state_hash"];

  // Number of claimable accounts (EOAs) imported from Morse state export
  // - Account balances include consolidated application and supplier actor stakes
  uint64 num_accounts = 3 [(gogoproto.jsontag) = "num_accounts"];
}

// EventMorseAccountClaimed
// - Emitted when a MorseAccount is claimed on-chain
message EventMorseAccountClaimed {
  // Shannon session end height in which the claim was committed
  int64 session_end_height = 1 [(gogoproto.jsontag) = "session_end_height"];

  // Unstaked balance claimed from Morse
  cosmos.base.v1beta1.Coin claimed_balance = 2 [(gogoproto.jsontag) = "claimed_balance", (gogoproto.nullable) = false];

  // bech32-encoded Shannon address to mint claimed balance
  string shannon_dest_address = 3 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.jsontag) = "shannon_dest_address"];

  // Hex-encoded Morse account address whose balance was claimed
  string morse_src_address = 4 [(gogoproto.jsontag) = "morse_src_address"];
}

// EventMorseApplicationClaimed
// - Emitted when a MorseAccount is claimed on-chain as a staked application
message EventMorseApplicationClaimed {
  // Shannon session end height in which the claim was committed
  int64 session_end_height = 1 [(gogoproto.jsontag) = "session_end_height"];

  // Unstaked balance claimed from Morse
  cosmos.base.v1beta1.Coin claimed_balance = 2 [(gogoproto.jsontag) = "claimed_balance", (gogoproto.nullable) = false];

  // Hex-encoded Morse account address whose balance was claimed
  string morse_src_address = 3 [(gogoproto.jsontag) = "morse_src_address"];

  // Application stake claimed as a result of the claim
  // - Equivalent to Morse application staked amount
  cosmos.base.v1beta1.Coin claimed_application_stake = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "claimed_application_stake"];

  // Application staked as a result of the claim
  // - Mirrors Morse application stake
  application.Application application = 5 [(gogoproto.jsontag) = "application"];
}

// EventMorseSupplierClaimed
// - Emitted when a MorseAccount is claimed on-chain as a staked Supplier
message EventMorseSupplierClaimed {
  // Shannon session end height in which the claim was committed
  int64 session_end_height = 1 [(gogoproto.jsontag) = "session_end_height"];

  // Unstaked balance claimed from Morse
  cosmos.base.v1beta1.Coin claimed_balance = 2 [(gogoproto.jsontag) = "claimed_balance", (gogoproto.nullable) = false];

  // Hex-encoded Morse operator address whose balance was claimed
  // TODO_IN_THIS_COMMIT: update...
  string morse_operator_address = 3 [(gogoproto.jsontag) = "morse_operator_address"];

  // TODO_IN_THIS_PR: use in msg handler!
  // Hex-encoded Morse singer address
  // TODO_IN_THIS_PR: update...
  string morse_singer_address = 6 [(gogoproto.jsontag) = "morse_singer_address"];

  // Enum for Morse supplier claim signer type
  // TODO_IN_THIS_COMMIT: update...
  MorseSupplierClaimSignerType claim_signer_type = 7 [(gogoproto.jsontag) = "claim_signer_type"];

  // Supplier stake claimed as a result of the claim
  // - Equivalent to Morse supplier staked amount
  cosmos.base.v1beta1.Coin claimed_supplier_stake = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "claimed_supplier_stake"];

  // Supplier staked as a result of the claim
  // - Mirrors Morse supplier stake
  shared.Supplier supplier = 5 [(gogoproto.jsontag) = "supplier"];
}