syntax = "proto3";
package pocket.tokenomics;

import "cosmos/auth/v1beta1/auth.proto";
import "gogoproto/gogo.proto";
import "pocket/tokenomics/params.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/pokt-network/poktroll/x/tokenomics/types";

// Msg defines the Msg service.
service Msg {
    rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // TODO_IMPROVE(#322): The requirement to provide all params is adopted from the
  // latest Cosmos SDK version. We should look into either improving this ourselves
  // or seeing if it is on their roadmap.

  // params defines the x/tokenomics parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a MsgUpdateParams message.
message MsgUpdateParamsResponse {}