syntax = "proto3";
package pocket.tokenomics;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "pocket/tokenomics/params.proto";
import "google/protobuf/any.proto";
import "cosmos/auth/v1beta1/auth.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/query/v1/query.proto";

option go_package = "github.com/pokt-network/poktroll/x/tokenomics/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/pokt-network/poktroll/tokenomics/params";
  }
}

// QueryParamsRequest queries all parameters.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}