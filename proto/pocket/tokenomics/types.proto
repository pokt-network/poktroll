syntax = "proto3";
package pocket.tokenomics;

option go_package = "github.com/pokt-network/poktroll/x/tokenomics/types";
option (gogoproto.stable_marshaler_all) = true;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "pocket/proof/types.proto";

// ClaimSettlementResult holds the result of a single claim settlement: mint, burn, and transfer operations.
message ClaimSettlementResult {
  pocket.proof.Claim claim = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "claim"];
  repeated MintBurnOp mints = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "mints"];
  repeated MintBurnOp burns = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "burns"];
  repeated ModToModTransfer mod_to_mod_transfers = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "mod_to_mod_transfers"];
  repeated ModToAcctTransfer mod_to_acct_transfers = 5 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "mod_to_acct_transfers"];
}

// MintBurnOp holds the parameters of a single mint or burn operation.
message MintBurnOp {
  SettlementOpReason op_reason = 1 [(gogoproto.jsontag) = "op_reason"];
  string DestinationModule = 2 [(gogoproto.jsontag) = "destination_module"];
  cosmos.base.v1beta1.Coin coin = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "coin"];
}

// ModToAcctTransfer holds the parameters of a single module to account transfer operation.
message ModToAcctTransfer {
  SettlementOpReason op_reason = 1 [(gogoproto.jsontag) = "op_reason"];
  string SenderModule = 2 [(gogoproto.jsontag) = "sender_module"];
  string RecipientAddress = 3 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.jsontag) = "recipient_address"]; // bech32 address
  cosmos.base.v1beta1.Coin coin = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "coin"];
}

// ModToModTransfer holds the parameters of a single module to module transfer operation.
message ModToModTransfer {
  SettlementOpReason op_reason = 1 [(gogoproto.jsontag) = "op_reason"];
  string SenderModule = 2 [(gogoproto.jsontag) = "sender_module"];
  string RecipientModule = 3 [(gogoproto.jsontag) = "recipient_module"]; // This the semantic module named that can be found by searching for "ModuleName =" in the codebase
  cosmos.base.v1beta1.Coin coin = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "coin"];
}

// SettlementOpReason is a distinct, tlm-specific causal reason for a given operation.
enum SettlementOpReason {
  // Next free index: 20

  // *** All TLMs ***

  // UNSPECIFIED is the default value for SettlementOpReason
  // It is used as a field type for objects which need to distinguish whether a SettlementOpReason has been specified it or not.
  UNSPECIFIED = 0;

  // All TLMs: Penalization: Slash, burn, etc...
  UNSPECIFIED_TLM_SUPPLIER_SLASH_MODULE_TRANSFER = 11;
  UNSPECIFIED_TLM_SUPPLIER_SLASH_STAKE_BURN = 12;

  // *** MintEqualsBurnTlm ***

  // MintEqualsBurnTlm: Value transfer (credit/debit aka mint/burn)
  TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_STAKE_MINT = 1;
  TLM_RELAY_BURN_EQUALS_MINT_APPLICATION_STAKE_BURN = 2;
  TLM_RELAY_BURN_EQUALS_MINT_TOKENOMICS_CLAIM_DISTRIBUTION_MINT = 19;

  // MintEqualsBurnTlm: Reward distribution
  TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION = 4;
  TLM_RELAY_BURN_EQUALS_MINT_DAO_REWARD_DISTRIBUTION = 15;
  TLM_RELAY_BURN_EQUALS_MINT_PROPOSER_REWARD_DISTRIBUTION = 16;
  TLM_RELAY_BURN_EQUALS_MINT_SOURCE_OWNER_REWARD_DISTRIBUTION = 17;
  TLM_RELAY_BURN_EQUALS_MINT_APPLICATION_REWARD_DISTRIBUTION = 18;

  // *** GlobalMintTLM ***

  // GlobalMintTLM: Inflation
  TLM_GLOBAL_MINT_INFLATION = 3;

  // GlobalMintTLM: Reward distribution
  TLM_GLOBAL_MINT_DAO_REWARD_DISTRIBUTION = 5;
  TLM_GLOBAL_MINT_PROPOSER_REWARD_DISTRIBUTION = 6;
  TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION = 7;
  TLM_GLOBAL_MINT_SOURCE_OWNER_REWARD_DISTRIBUTION = 8;
  TLM_GLOBAL_MINT_APPLICATION_REWARD_DISTRIBUTION = 9;

  // GlobalMintTLM: Self-servicing mitigation
  TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_DAO_TRANSFER = 10;

  // GlobalMintTLM: Module accounting
  TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_MODULE_TRANSFER = 13;
  TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_MODULE_TRANSFER = 14;

}
