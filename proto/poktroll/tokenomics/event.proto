syntax = "proto3";
package poktroll.tokenomics;

option go_package = "github.com/pokt-network/poktroll/x/tokenomics/types";

import "poktroll/proof/claim.proto";

// EventClaimExpired is an event emitted during settlement whenever a claim requiring
// an on-chain proof doesn't have one. The claim cannot be settled, leading to that work
// never being rewarded.
message EventClaimExpired {
    poktroll.proof.Claim claim = 1;
    uint64 compute_units = 2;
}

// EventClaimSettled is an event emitted whenever a claim is settled.
// The proof_required determines whether the claim requires a proof that has been submitted or not
message EventClaimSettled {
    poktroll.proof.Claim claim = 1;
    uint64 compute_units = 2;
    bool proof_required = 3;
}

// EventRelayMiningDifficultyUpdated is an event emitted whenever the relay mining difficulty is updated
// for a given service.
message EventRelayMiningDifficultyUpdated {
    string service_id = 1;
    string prev_target_hash_hex_encoded = 2;
    string new_target_hash_hex_encoded = 3;
    uint64 prev_num_relays_ema = 4;
    uint64 new_num_relays_ema = 5;
}
