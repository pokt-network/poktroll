syntax = "proto3";
package poktroll.supplier;

option go_package = "github.com/pokt-network/poktroll/x/supplier/types";
option (gogoproto.stable_marshaler_all) = true;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

import "poktroll/shared/supplier.proto";

// EventSupplierStaked is emitted with the commitment of the supplier stake message.
message EventSupplierStaked {
  poktroll.shared.Supplier supplier = 1 [(gogoproto.jsontag) = "supplier"];
}

// EventSupplierUnbondingBegin is emitted when an application unstake message
// is committed, indicating that an application has begun unbonding.
message EventSupplierUnbondingBegin {
  poktroll.shared.Supplier supplier = 1 [(gogoproto.jsontag) = "supplier"];
  int64 unbonding_height = 2 [(gogoproto.jsontag) = "unbonding_height"];
}

// EventSupplierUnbondingEnd is emitted when an supplier has completed
// unbonding. The unbonding period is determined by the shared param,
// supplier_unbonding_period_sessions.
message EventSupplierUnbondingEnd {
  poktroll.shared.Supplier supplier = 1 [(gogoproto.jsontag) = "supplier"];
  int64 unbonding_height = 2 [(gogoproto.jsontag) = "unbonding_height"];
}

// EventSupplierUnbondingCanceled is emitted when an supplier which was unbonding
// successfully (re-)stakes before the unbonding period has elapsed. An EventSupplierStaked
// event will also be emitted immediately after this event.
message EventSupplierUnbondingCanceled {
  poktroll.shared.Supplier supplier = 1 [(gogoproto.jsontag) = "supplier"];
}