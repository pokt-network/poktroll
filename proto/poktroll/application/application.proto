syntax = "proto3";
package poktroll.application;

option go_package = "github.com/pokt-network/poktroll/x/application/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

import "poktroll/shared/service.proto";

// Application defines the type used to store an on-chain definition and state for an application
message Application {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The Bech32 address of the application using cosmos' ScalarDescriptor to ensure deterministic encoding
  cosmos.base.v1beta1.Coin stake = 2; // The total amount of uPOKT the application has staked
  repeated poktroll.shared.ApplicationServiceConfig service_configs = 3; // The list of services this appliccation is configured to request service for
  // TODO_BETA: Rename `delegatee_gateway_addresses` to `gateway_addresses_delegated_to`.
  // Ensure to rename all relevant configs, comments, variables, function names, etc as well.
  repeated string delegatee_gateway_addresses = 4 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.nullable) = false]; // The Bech32 encoded addresses for all delegatee Gateways, in a non-nullable slice
   // A map from sessionEndHeights to a list of Gateways.
   // The key is the height of the last block of the session during which the
   // respective undelegation was committed.
   // The value is a list of gateways being undelegated from.
   // TODO_DOCUMENT(@red-0ne): Need to document the flow from this comment
  // so its clear to everyone why this is necessary; https://github.com/pokt-network/poktroll/issues/476#issuecomment-2052639906.
  map<uint64, UndelegatingGatewayList> pending_undelegations = 5 [(gogoproto.nullable) = false];
}

// UndelegatingGatewayList is used as the Value of `pending_undelegations`.
// It is required to store a repeated list of strings as a map value.
message UndelegatingGatewayList {
  repeated string gateway_addresses = 2 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.nullable) = false];
}