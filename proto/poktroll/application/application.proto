syntax = "proto3";
package poktroll.application;

option go_package = "github.com/pokt-network/poktroll/x/application/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

import "poktroll/shared/service.proto";

// Application defines the type used to store an on-chain definition and state for an application
message Application {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The Bech32 address of the application using cosmos' ScalarDescriptor to ensure deterministic encoding
  cosmos.base.v1beta1.Coin stake = 2; // The total amount of uPOKT the application has staked
  repeated poktroll.shared.ApplicationServiceConfig service_configs = 3; // The list of services this appliccation is configured to request service for
  repeated string delegatee_gateway_addresses = 4 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.nullable) = false]; // The Bech32 encoded addresses for all delegatee Gateways, in a non-nullable slice
  map<uint64, UndelegationFromAppToGatewayEvent> undelegations = 5 [(gogoproto.nullable) = false]; // The map of session end heights to undelegations from Gateway, in a non-nullable map
}

// UndelegationFromAppToGatewayEvent defines the type used to store an undelegation
// event from an application to a gateway that happened at a specific session end height.
message UndelegationFromAppToGatewayEvent {
  repeated string undelegated_gateways = 2 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.nullable) = false];
}