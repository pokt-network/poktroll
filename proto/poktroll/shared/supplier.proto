syntax = "proto3";
package poktroll.shared;

option go_package = "github.com/pokt-network/poktroll/x/shared/types";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

import "poktroll/shared/service.proto";

// Supplier is the type defining the actor in Pocket Network that provides RPC services.
message Supplier {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The Bech32 address of the supplier using cosmos' ScalarDescriptor to ensure deterministic encoding
  cosmos.base.v1beta1.Coin stake = 2; // The total amount of uPOKT the supplier has staked
  repeated SupplierServiceConfig services = 3; // The service configs this supplier can support
  // The session end height at which an actively unbonding supplier unbonds its stake.
  // If the supplier did not unstake, this value will be 0.
  uint64 unstake_session_end_height = 4;
  // services_activation_heights_map is a map of serviceIds to the height at
  // which the staked supplier will become active for that service.
  // Activation heights are session start heights.
  map<string, uint64> services_activation_heights_map = 5;
}

