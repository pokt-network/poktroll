# pocketdex_disabled_resource creates a tilt resource that prints a message indicating
# that the indexer is disabled and how to enable it.
def ibc_disabled_resource(reason):
    local_resource("⚠️ IBC Disabled",
                   "echo '{}'".format(reason),
                   labels=["IBC"])

def check_and_load_ibc(ibc_config):
    print("IBC config:")
    print(ibc_config)
    if ibc_config["enabled"]:
        print("TRUE")
        load_ibc_resources()
    else:
        print("FALSE")
        ibc_disabled_resource("Localnet IBC resources disabled. Set `ibc.enabled` to `true` in `localnet_config.yaml` to enable them.")

def load_ibc_resources():
    docker_build(
        "agoric",
        context=os.path.join(".", "localnet", "agoric"),  # needs any folder, doesn't matter
        dockerfile_contents="""
        FROM ghcr.io/agoric/agoric-3-proposals:latest
        
        # Update .bashrc
        RUN grep -qF 'env_setup.sh' /root/.bashrc || echo "source /usr/src/upgrade-test-scripts/env_setup.sh" >> /root/.bashrc
        RUN grep -qF 'printKeys' /root/.bashrc || echo "printKeys" >> /root/.bashrc
        
        ## Install Go v1.23.0
        #RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz
        #RUN rm -rf /usr/local/go && tar -C /usr/local -xzf go*.tar.gz
        #RUN echo 'export PATH=$PATH:/usr/local/go/bin' >> /root/.bashrc
        #RUN echo 'export GOPATH=/usr/local/go' >> /root/.bashrc
        #
        ## Install Debugging Tools
        #RUN source /root/.bashrc && go install github.com/go-delve/delve/cmd/dlv@v1.23.0
        #RUN apt update && apt install -y gdbserver gdb
        #
        ## Clone and build Agoric SDK for local debugging source
        #RUN git clone https://github.com/agoric/agoric-sdk.git --branch=v0.35.0-u19.2 /usr/src/agoric-sdk2
        #WORKDIR /usr/src/agoric-sdk2/golang/cosmos
        #RUN yarn add node-addon-api
        #RUN . /root/.bashrc && go mod tidy
        #RUN . /root/.bashrc && make all
        #RUN cp ./build/agd /usr/local/bin/agd
        #
        ## Reset the working directory
        #WORKDIR /usr/src/upgrade-test-scripts
        """,
    )

    k8s_yaml(helm(
        os.path.join("localnet", "agoric"),
        name="agoric",
        values=os.path.join("localnet", "kubernetes", "values-agoric.yaml"),  # Only files go here
    ))

    k8s_resource(
        'agoric',
        new_name="Agoric Local Node",
        labels=["IBC"],
        port_forwards=[
            "46657:26657",
            "11090:9090",
            "40009:40009"
        ],
    )

    # Deploy IBC relayer CLI (Job) and daemon (Deployment)
    k8s_yaml(helm(
        os.path.join("localnet", "ibc-relayer"),
        values=[
            os.path.join("localnet", "kubernetes", "values-ibc-relayer-cli.yaml"),
            os.path.join("localnet", "kubernetes", "values-ibc-relayer-common.yaml"),
        ]
    ))

    k8s_yaml(helm(
        os.path.join("localnet", "ibc-relayer"),
        values=[
            os.path.join("localnet", "kubernetes", "values-ibc-relayer-daemon.yaml"),
            os.path.join("localnet", "kubernetes", "values-ibc-relayer-common.yaml"),
        ]
    ))

    docker_build(
        "ibc-relayer",
        context=os.path.join(".", "localnet", "ibc-relayer"),  # needs any folder, doesn't matter
        dockerfile_contents="""
        FROM golang:1.23.0

        RUN apt-get update && apt-get install -y wget

        # Install hermes IBC relayer CLI.
        RUN mkdir -p /root/.hermes/bin
        WORKDIR /usr/local
        RUN wget https://github.com/informalsystems/hermes/releases/download/v1.10.3/hermes-v1.10.3-x86_64-unknown-linux-gnu.tar.gz
        RUN tar -C /root/.hermes/bin/ -vxf /usr/local/hermes-v1.10.3-x86_64-unknown-linux-gnu.tar.gz

        ENTRYPOINT ["/root/.hermes/bin/hermes"]
        CMD ["start"]
    """)

    k8s_resource(
        workload="cli-ibc-relayer",
        new_name="IBC Setup",
        labels=["IBC"],
        trigger_mode=TRIGGER_MODE_MANUAL,
        resource_deps=[
            "validator",
            "Agoric Local Node",
        ]
    )

    k8s_resource(
        workload="daemon-ibc-relayer",
        new_name="Agoric IBC Relayer",
        labels=["IBC"],
        resource_deps=[
            "validator",
            "Agoric Local Node",
            "IBC Setup",
        ]
    )
