// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: poktroll/gateway/event.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// EventGatewayStaked is emitted when a gateway is staked or up-staked.
type EventGatewayStaked struct {
	// The gateway that has been staked.
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway"`
	// The end height of the session in which gateway was staked.
	SessionEndHeight int64 `protobuf:"varint,2,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
}

func (m *EventGatewayStaked) Reset()         { *m = EventGatewayStaked{} }
func (m *EventGatewayStaked) String() string { return proto.CompactTextString(m) }
func (*EventGatewayStaked) ProtoMessage()    {}
func (*EventGatewayStaked) Descriptor() ([]byte, []int) {
	return fileDescriptor_34212b93ec812e7c, []int{0}
}
func (m *EventGatewayStaked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventGatewayStaked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventGatewayStaked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventGatewayStaked.Merge(m, src)
}
func (m *EventGatewayStaked) XXX_Size() int {
	return m.Size()
}
func (m *EventGatewayStaked) XXX_DiscardUnknown() {
	xxx_messageInfo_EventGatewayStaked.DiscardUnknown(m)
}

var xxx_messageInfo_EventGatewayStaked proto.InternalMessageInfo

func (m *EventGatewayStaked) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *EventGatewayStaked) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

// EventGatewayUnbondingBegin is emitted when a gateway begins unbonding.
// It is triggered by the commitment of an unstake gateway message.
// This event signals that a gateway has begun unbonding.
// The unbonding period is determined by the shared param gateway_unbonding_period_sessions.
type EventGatewayUnbondingBegin struct {
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway"`
	// The end height of the session in which the unbonding began.
	SessionEndHeight int64 `protobuf:"varint,3,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
	// The height at which gateway unbonding will end.
	UnbondingEndHeight int64 `protobuf:"varint,4,opt,name=unbonding_end_height,json=unbondingEndHeight,proto3" json:"unbonding_height"`
}

func (m *EventGatewayUnbondingBegin) Reset()         { *m = EventGatewayUnbondingBegin{} }
func (m *EventGatewayUnbondingBegin) String() string { return proto.CompactTextString(m) }
func (*EventGatewayUnbondingBegin) ProtoMessage()    {}
func (*EventGatewayUnbondingBegin) Descriptor() ([]byte, []int) {
	return fileDescriptor_34212b93ec812e7c, []int{1}
}
func (m *EventGatewayUnbondingBegin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventGatewayUnbondingBegin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventGatewayUnbondingBegin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventGatewayUnbondingBegin.Merge(m, src)
}
func (m *EventGatewayUnbondingBegin) XXX_Size() int {
	return m.Size()
}
func (m *EventGatewayUnbondingBegin) XXX_DiscardUnknown() {
	xxx_messageInfo_EventGatewayUnbondingBegin.DiscardUnknown(m)
}

var xxx_messageInfo_EventGatewayUnbondingBegin proto.InternalMessageInfo

func (m *EventGatewayUnbondingBegin) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *EventGatewayUnbondingBegin) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func (m *EventGatewayUnbondingBegin) GetUnbondingEndHeight() int64 {
	if m != nil {
		return m.UnbondingEndHeight
	}
	return 0
}

// EventGatewayUnbondingEnd is emitted when a gateway has completed unbonding.
// The unbonding period is determined by the shared param gateway_unbonding_period_sessions.
type EventGatewayUnbondingEnd struct {
	// The gateway that has completed unbonding.
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway"`
	// The end height of the session in which the unbonding began.
	SessionEndHeight int64 `protobuf:"varint,3,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
	// The height at which gateway unbonding will end.
	UnbondingEndHeight int64 `protobuf:"varint,4,opt,name=unbonding_end_height,json=unbondingEndHeight,proto3" json:"unbonding_height"`
}

func (m *EventGatewayUnbondingEnd) Reset()         { *m = EventGatewayUnbondingEnd{} }
func (m *EventGatewayUnbondingEnd) String() string { return proto.CompactTextString(m) }
func (*EventGatewayUnbondingEnd) ProtoMessage()    {}
func (*EventGatewayUnbondingEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_34212b93ec812e7c, []int{2}
}
func (m *EventGatewayUnbondingEnd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventGatewayUnbondingEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventGatewayUnbondingEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventGatewayUnbondingEnd.Merge(m, src)
}
func (m *EventGatewayUnbondingEnd) XXX_Size() int {
	return m.Size()
}
func (m *EventGatewayUnbondingEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_EventGatewayUnbondingEnd.DiscardUnknown(m)
}

var xxx_messageInfo_EventGatewayUnbondingEnd proto.InternalMessageInfo

func (m *EventGatewayUnbondingEnd) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *EventGatewayUnbondingEnd) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func (m *EventGatewayUnbondingEnd) GetUnbondingEndHeight() int64 {
	if m != nil {
		return m.UnbondingEndHeight
	}
	return 0
}

// EventGatewayUnbondingCanceled is emitted when a gateway which was unbonding
// successfully (re-)stakes before the unbonding period has elapsed.
// An EventGatewayStaked event will also be emitted immediately after this event.
type EventGatewayUnbondingCanceled struct {
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway"`
	// The end height of the session in which the unbonding was canceled.
	SessionEndHeight int64 `protobuf:"varint,2,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
}

func (m *EventGatewayUnbondingCanceled) Reset()         { *m = EventGatewayUnbondingCanceled{} }
func (m *EventGatewayUnbondingCanceled) String() string { return proto.CompactTextString(m) }
func (*EventGatewayUnbondingCanceled) ProtoMessage()    {}
func (*EventGatewayUnbondingCanceled) Descriptor() ([]byte, []int) {
	return fileDescriptor_34212b93ec812e7c, []int{3}
}
func (m *EventGatewayUnbondingCanceled) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventGatewayUnbondingCanceled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventGatewayUnbondingCanceled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventGatewayUnbondingCanceled.Merge(m, src)
}
func (m *EventGatewayUnbondingCanceled) XXX_Size() int {
	return m.Size()
}
func (m *EventGatewayUnbondingCanceled) XXX_DiscardUnknown() {
	xxx_messageInfo_EventGatewayUnbondingCanceled.DiscardUnknown(m)
}

var xxx_messageInfo_EventGatewayUnbondingCanceled proto.InternalMessageInfo

func (m *EventGatewayUnbondingCanceled) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *EventGatewayUnbondingCanceled) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*EventGatewayStaked)(nil), "poktroll.gateway.EventGatewayStaked")
	proto.RegisterType((*EventGatewayUnbondingBegin)(nil), "poktroll.gateway.EventGatewayUnbondingBegin")
	proto.RegisterType((*EventGatewayUnbondingEnd)(nil), "poktroll.gateway.EventGatewayUnbondingEnd")
	proto.RegisterType((*EventGatewayUnbondingCanceled)(nil), "poktroll.gateway.EventGatewayUnbondingCanceled")
}

func init() { proto.RegisterFile("poktroll/gateway/event.proto", fileDescriptor_34212b93ec812e7c) }

var fileDescriptor_34212b93ec812e7c = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xc8, 0xcf, 0x2e,
	0x29, 0xca, 0xcf, 0xc9, 0xd1, 0x4f, 0x4f, 0x2c, 0x49, 0x2d, 0x4f, 0xac, 0xd4, 0x4f, 0x2d, 0x4b,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x80, 0xc9, 0xea, 0x41, 0x65, 0xa5,
	0x24, 0x93, 0xf3, 0x8b, 0x73, 0xf3, 0x8b, 0xe3, 0xc1, 0xf2, 0xfa, 0x10, 0x0e, 0x44, 0xb1, 0x94,
	0x48, 0x7a, 0x7e, 0x7a, 0x3e, 0x44, 0x1c, 0xc4, 0x82, 0x8a, 0x62, 0x5a, 0x50, 0x52, 0x59, 0x90,
	0x0a, 0xd5, 0xa3, 0x34, 0x87, 0x91, 0x4b, 0xc8, 0x15, 0x64, 0xa1, 0x3b, 0x44, 0x32, 0xb8, 0x24,
	0x31, 0x3b, 0x35, 0x45, 0xc8, 0x81, 0x8b, 0x1d, 0xaa, 0x5a, 0x82, 0x51, 0x81, 0x51, 0x83, 0xdb,
	0x48, 0x52, 0x0f, 0xdd, 0x25, 0x7a, 0x50, 0x1d, 0x4e, 0xdc, 0xaf, 0xee, 0xc9, 0xc3, 0x54, 0x07,
	0xc1, 0x18, 0x42, 0x2e, 0x5c, 0x42, 0xc5, 0xa9, 0xc5, 0xc5, 0x99, 0xf9, 0x79, 0xf1, 0xa9, 0x79,
	0x29, 0xf1, 0x19, 0xa9, 0x99, 0xe9, 0x19, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x4e, 0x62,
	0xaf, 0xee, 0xc9, 0x63, 0x91, 0x0d, 0x12, 0x80, 0x8a, 0xb9, 0xe6, 0xa5, 0x78, 0x80, 0x45, 0x94,
	0xde, 0x30, 0x72, 0x49, 0x21, 0x3b, 0x2f, 0x34, 0x2f, 0x29, 0x3f, 0x2f, 0x25, 0x33, 0x2f, 0xdd,
	0x29, 0x35, 0x3d, 0x33, 0x8f, 0x66, 0xce, 0x64, 0x26, 0xcd, 0x99, 0x42, 0x6e, 0x5c, 0x22, 0xa5,
	0x30, 0x97, 0x21, 0x9b, 0xc3, 0x02, 0x36, 0x47, 0xe4, 0xd5, 0x3d, 0x79, 0x01, 0x84, 0x3c, 0xd4,
	0x14, 0x21, 0xb8, 0x08, 0xc2, 0xbb, 0xaf, 0x18, 0xb9, 0x24, 0xb0, 0x7a, 0xd7, 0x35, 0x2f, 0x65,
	0xd8, 0x79, 0x76, 0x39, 0x23, 0x97, 0x2c, 0x56, 0xcf, 0x3a, 0x27, 0xe6, 0x25, 0xa7, 0xe6, 0x0c,
	0x9e, 0x54, 0xe8, 0xe4, 0x77, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x37, 0x1e, 0xc9,
	0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e,
	0xcb, 0x31, 0x44, 0x19, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x83,
	0x9c, 0xa7, 0x9b, 0x97, 0x5a, 0x52, 0x9e, 0x5f, 0x94, 0xad, 0x0f, 0xcf, 0x78, 0x15, 0xa8, 0x59,
	0x2f, 0x89, 0x0d, 0x9c, 0xf7, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xdc, 0x3e, 0x58,
	0xfc, 0x03, 0x00, 0x00,
}

func (m *EventGatewayStaked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventGatewayStaked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventGatewayStaked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x10
	}
	if m.Gateway != nil {
		{
			size, err := m.Gateway.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventGatewayUnbondingBegin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventGatewayUnbondingBegin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventGatewayUnbondingBegin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnbondingEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.UnbondingEndHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.Gateway != nil {
		{
			size, err := m.Gateway.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventGatewayUnbondingEnd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventGatewayUnbondingEnd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventGatewayUnbondingEnd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnbondingEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.UnbondingEndHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.Gateway != nil {
		{
			size, err := m.Gateway.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventGatewayUnbondingCanceled) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventGatewayUnbondingCanceled) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventGatewayUnbondingCanceled) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x10
	}
	if m.Gateway != nil {
		{
			size, err := m.Gateway.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventGatewayStaked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Gateway != nil {
		l = m.Gateway.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	return n
}

func (m *EventGatewayUnbondingBegin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Gateway != nil {
		l = m.Gateway.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	if m.UnbondingEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.UnbondingEndHeight))
	}
	return n
}

func (m *EventGatewayUnbondingEnd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Gateway != nil {
		l = m.Gateway.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	if m.UnbondingEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.UnbondingEndHeight))
	}
	return n
}

func (m *EventGatewayUnbondingCanceled) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Gateway != nil {
		l = m.Gateway.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	return n
}

func sovEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEvent(x uint64) (n int) {
	return sovEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventGatewayStaked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventGatewayStaked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventGatewayStaked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gateway == nil {
				m.Gateway = &Gateway{}
			}
			if err := m.Gateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventGatewayUnbondingBegin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventGatewayUnbondingBegin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventGatewayUnbondingBegin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gateway == nil {
				m.Gateway = &Gateway{}
			}
			if err := m.Gateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEndHeight", wireType)
			}
			m.UnbondingEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnbondingEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventGatewayUnbondingEnd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventGatewayUnbondingEnd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventGatewayUnbondingEnd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gateway == nil {
				m.Gateway = &Gateway{}
			}
			if err := m.Gateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEndHeight", wireType)
			}
			m.UnbondingEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnbondingEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventGatewayUnbondingCanceled) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventGatewayUnbondingCanceled: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventGatewayUnbondingCanceled: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gateway == nil {
				m.Gateway = &Gateway{}
			}
			if err := m.Gateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEvent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEvent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEvent = fmt.Errorf("proto: unexpected end of group")
)
