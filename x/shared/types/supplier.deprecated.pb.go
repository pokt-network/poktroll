// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: poktroll/shared/supplier.deprecated.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_sortkeys "github.com/cosmos/gogoproto/sortkeys"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Supplier represents an actor in Pocket Network that provides RPC services
type SupplierDeprecated struct {
	// Owner address that controls the staked funds and receives rewards by default
	// Cannot be updated by the operator
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Operator address managing the offchain server
	// Immutable for supplier's lifespan - requires unstake/re-stake to change.
	// Can update supplier configs except for owner address.
	OperatorAddress string `protobuf:"bytes,2,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	// Total amount of staked uPOKT
	Stake *types.Coin `protobuf:"bytes,3,opt,name=stake,proto3" json:"stake,omitempty"`
	// List of service configurations supported by this supplier
	Services []*SupplierServiceConfig `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty"`
	// Session end height when supplier initiated unstaking (0 if not unstaking)
	UnstakeSessionEndHeight uint64 `protobuf:"varint,5,opt,name=unstake_session_end_height,json=unstakeSessionEndHeight,proto3" json:"unstake_session_end_height,omitempty"`
	// Mapping of serviceIds to their activation heights
	// - Key: serviceId
	// - Value: Session start height when supplier becomes active for the service
	ServicesActivationHeightsMap map[string]uint64 `protobuf:"bytes,6,rep,name=services_activation_heights_map,json=servicesActivationHeightsMap,proto3" json:"services_activation_heights_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *SupplierDeprecated) Reset()         { *m = SupplierDeprecated{} }
func (m *SupplierDeprecated) String() string { return proto.CompactTextString(m) }
func (*SupplierDeprecated) ProtoMessage()    {}
func (*SupplierDeprecated) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf84ece45c6d004, []int{0}
}
func (m *SupplierDeprecated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SupplierDeprecated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *SupplierDeprecated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplierDeprecated.Merge(m, src)
}
func (m *SupplierDeprecated) XXX_Size() int {
	return m.Size()
}
func (m *SupplierDeprecated) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplierDeprecated.DiscardUnknown(m)
}

var xxx_messageInfo_SupplierDeprecated proto.InternalMessageInfo

func (m *SupplierDeprecated) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *SupplierDeprecated) GetOperatorAddress() string {
	if m != nil {
		return m.OperatorAddress
	}
	return ""
}

func (m *SupplierDeprecated) GetStake() *types.Coin {
	if m != nil {
		return m.Stake
	}
	return nil
}

func (m *SupplierDeprecated) GetServices() []*SupplierServiceConfig {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *SupplierDeprecated) GetUnstakeSessionEndHeight() uint64 {
	if m != nil {
		return m.UnstakeSessionEndHeight
	}
	return 0
}

func (m *SupplierDeprecated) GetServicesActivationHeightsMap() map[string]uint64 {
	if m != nil {
		return m.ServicesActivationHeightsMap
	}
	return nil
}

func init() {
	proto.RegisterType((*SupplierDeprecated)(nil), "poktroll.shared.SupplierDeprecated")
	proto.RegisterMapType((map[string]uint64)(nil), "poktroll.shared.SupplierDeprecated.ServicesActivationHeightsMapEntry")
}

func init() {
	proto.RegisterFile("poktroll/shared/supplier.deprecated.proto", fileDescriptor_3bf84ece45c6d004)
}

var fileDescriptor_3bf84ece45c6d004 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x8d, 0x9b, 0xa4, 0x02, 0x17, 0xd4, 0xca, 0x8a, 0xc4, 0x36, 0x82, 0x25, 0x70, 0x40, 0xe1,
	0x50, 0x5b, 0x2d, 0x17, 0x04, 0xe2, 0xd0, 0x84, 0x48, 0x5c, 0x2a, 0xa4, 0xcd, 0x8d, 0xcb, 0xca,
	0xd9, 0x1d, 0x36, 0x56, 0x12, 0xdb, 0xb2, 0x9d, 0x94, 0xfc, 0x03, 0x07, 0xbe, 0x83, 0x33, 0x1f,
	0xc1, 0xb1, 0xe2, 0xd4, 0x23, 0x4a, 0x7e, 0x04, 0xed, 0xda, 0x9b, 0x4a, 0x20, 0xda, 0x9b, 0xc7,
	0xef, 0xcd, 0xf3, 0x7b, 0x9e, 0xc1, 0x2f, 0xb5, 0x9a, 0x39, 0xa3, 0xe6, 0x73, 0x66, 0xa7, 0xdc,
	0x40, 0xce, 0xec, 0x52, 0xeb, 0xb9, 0x00, 0x43, 0x73, 0xd0, 0x06, 0x32, 0xee, 0x20, 0xa7, 0xda,
	0x28, 0xa7, 0xc8, 0x61, 0x4d, 0xa5, 0x9e, 0xda, 0x3d, 0xce, 0x94, 0x5d, 0x28, 0x9b, 0x56, 0x30,
	0xf3, 0x85, 0xe7, 0x76, 0x63, 0x5f, 0xb1, 0x09, 0xb7, 0xc0, 0x56, 0xa7, 0x13, 0x70, 0xfc, 0x94,
	0x65, 0x4a, 0xc8, 0x80, 0x3f, 0xf9, 0xe7, 0x59, 0x30, 0x2b, 0x91, 0x41, 0x80, 0x3b, 0x85, 0x2a,
	0x94, 0x97, 0x2d, 0x4f, 0xfe, 0xf6, 0xf9, 0xf7, 0x16, 0x26, 0xe3, 0x60, 0xef, 0xfd, 0xce, 0x1d,
	0x79, 0x87, 0x1f, 0xaa, 0x4b, 0x09, 0x26, 0xe5, 0x79, 0x6e, 0xc0, 0xda, 0x08, 0xf5, 0x50, 0xff,
	0xfe, 0x20, 0xfa, 0xf5, 0xe3, 0xa4, 0x13, 0x4c, 0x9d, 0x7b, 0x64, 0xec, 0x8c, 0x90, 0x45, 0xf2,
	0xa0, 0xa2, 0x87, 0x3b, 0x32, 0xc4, 0x47, 0x4a, 0x83, 0xe1, 0x4e, 0xdd, 0x28, 0xec, 0xdd, 0xa1,
	0x70, 0x58, 0x77, 0xd4, 0x22, 0x0c, 0xb7, 0xad, 0xe3, 0x33, 0x88, 0x9a, 0x3d, 0xd4, 0x3f, 0x38,
	0x3b, 0xa6, 0xa1, 0xad, 0xcc, 0x4f, 0x43, 0x7e, 0x3a, 0x54, 0x42, 0x26, 0x9e, 0x47, 0x06, 0xf8,
	0x5e, 0x88, 0x6c, 0xa3, 0x56, 0xaf, 0xd9, 0x3f, 0x38, 0x7b, 0x41, 0xff, 0xfa, 0x5f, 0x5a, 0x67,
	0x1d, 0x7b, 0xe2, 0x50, 0xc9, 0xcf, 0xa2, 0x48, 0x76, 0x7d, 0xe4, 0x2d, 0xee, 0x2e, 0x65, 0x25,
	0x97, 0x5a, 0xb0, 0x56, 0x28, 0x99, 0x82, 0xcc, 0xd3, 0x29, 0x88, 0x62, 0xea, 0xa2, 0x76, 0x0f,
	0xf5, 0x5b, 0xc9, 0xa3, 0xc0, 0x18, 0x7b, 0xc2, 0x48, 0xe6, 0x1f, 0x2a, 0x98, 0x7c, 0x45, 0xf8,
	0x69, 0xad, 0x94, 0xf2, 0xcc, 0x89, 0x15, 0x77, 0xa5, 0x82, 0xef, 0xb6, 0xe9, 0x82, 0xeb, 0x68,
	0xbf, 0x32, 0x36, 0xfa, 0xaf, 0xb1, 0x9b, 0x21, 0xd0, 0xe0, 0xd1, 0x9e, 0xef, 0x94, 0xfc, 0x3b,
	0xf6, 0x82, 0xeb, 0x91, 0x74, 0x66, 0x9d, 0x3c, 0xb6, 0xb7, 0x50, 0xba, 0x1f, 0xf1, 0xb3, 0x3b,
	0x25, 0xc8, 0x11, 0x6e, 0xce, 0x60, 0xed, 0xe7, 0x9b, 0x94, 0x47, 0xd2, 0xc1, 0xed, 0x15, 0x9f,
	0x2f, 0xa1, 0x9a, 0x58, 0x2b, 0xf1, 0xc5, 0x9b, 0xbd, 0xd7, 0x68, 0x70, 0xf1, 0x73, 0x13, 0xa3,
	0xab, 0x4d, 0x8c, 0xae, 0x37, 0x31, 0xfa, 0xbd, 0x89, 0xd1, 0xb7, 0x6d, 0xdc, 0xb8, 0xda, 0xc6,
	0x8d, 0xeb, 0x6d, 0xdc, 0xf8, 0xc4, 0x0a, 0xe1, 0xa6, 0xcb, 0x09, 0xcd, 0xd4, 0x82, 0x95, 0xe9,
	0x4e, 0x24, 0xb8, 0x4b, 0x65, 0x66, 0x6c, 0xb7, 0x97, 0x5f, 0xea, 0xcd, 0x74, 0x6b, 0x0d, 0x76,
	0xb2, 0x5f, 0xad, 0xe0, 0xab, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xef, 0x3c, 0x4e, 0x30,
	0x03, 0x00, 0x00,
}

func (m *SupplierDeprecated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SupplierDeprecated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SupplierDeprecated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ServicesActivationHeightsMap) > 0 {
		keysForServicesActivationHeightsMap := make([]string, 0, len(m.ServicesActivationHeightsMap))
		for k := range m.ServicesActivationHeightsMap {
			keysForServicesActivationHeightsMap = append(keysForServicesActivationHeightsMap, string(k))
		}
		github_com_cosmos_gogoproto_sortkeys.Strings(keysForServicesActivationHeightsMap)
		for iNdEx := len(keysForServicesActivationHeightsMap) - 1; iNdEx >= 0; iNdEx-- {
			v := m.ServicesActivationHeightsMap[string(keysForServicesActivationHeightsMap[iNdEx])]
			baseI := i
			i = encodeVarintSupplierDeprecated(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i -= len(keysForServicesActivationHeightsMap[iNdEx])
			copy(dAtA[i:], keysForServicesActivationHeightsMap[iNdEx])
			i = encodeVarintSupplierDeprecated(dAtA, i, uint64(len(keysForServicesActivationHeightsMap[iNdEx])))
			i--
			dAtA[i] = 0xa
			i = encodeVarintSupplierDeprecated(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x32
		}
	}
	if m.UnstakeSessionEndHeight != 0 {
		i = encodeVarintSupplierDeprecated(dAtA, i, uint64(m.UnstakeSessionEndHeight))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSupplierDeprecated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Stake != nil {
		{
			size, err := m.Stake.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSupplierDeprecated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OperatorAddress) > 0 {
		i -= len(m.OperatorAddress)
		copy(dAtA[i:], m.OperatorAddress)
		i = encodeVarintSupplierDeprecated(dAtA, i, uint64(len(m.OperatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintSupplierDeprecated(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSupplierDeprecated(dAtA []byte, offset int, v uint64) int {
	offset -= sovSupplierDeprecated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SupplierDeprecated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovSupplierDeprecated(uint64(l))
	}
	l = len(m.OperatorAddress)
	if l > 0 {
		n += 1 + l + sovSupplierDeprecated(uint64(l))
	}
	if m.Stake != nil {
		l = m.Stake.Size()
		n += 1 + l + sovSupplierDeprecated(uint64(l))
	}
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovSupplierDeprecated(uint64(l))
		}
	}
	if m.UnstakeSessionEndHeight != 0 {
		n += 1 + sovSupplierDeprecated(uint64(m.UnstakeSessionEndHeight))
	}
	if len(m.ServicesActivationHeightsMap) > 0 {
		for k, v := range m.ServicesActivationHeightsMap {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovSupplierDeprecated(uint64(len(k))) + 1 + sovSupplierDeprecated(uint64(v))
			n += mapEntrySize + 1 + sovSupplierDeprecated(uint64(mapEntrySize))
		}
	}
	return n
}

func sovSupplierDeprecated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSupplierDeprecated(x uint64) (n int) {
	return sovSupplierDeprecated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SupplierDeprecated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSupplierDeprecated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SupplierDeprecated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SupplierDeprecated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stake", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stake == nil {
				m.Stake = &types.Coin{}
			}
			if err := m.Stake.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &SupplierServiceConfig{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnstakeSessionEndHeight", wireType)
			}
			m.UnstakeSessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnstakeSessionEndHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServicesActivationHeightsMap", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ServicesActivationHeightsMap == nil {
				m.ServicesActivationHeightsMap = make(map[string]uint64)
			}
			var mapkey string
			var mapvalue uint64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSupplierDeprecated
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSupplierDeprecated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthSupplierDeprecated
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthSupplierDeprecated
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSupplierDeprecated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipSupplierDeprecated(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthSupplierDeprecated
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.ServicesActivationHeightsMap[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSupplierDeprecated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSupplierDeprecated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSupplierDeprecated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSupplierDeprecated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSupplierDeprecated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSupplierDeprecated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSupplierDeprecated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSupplierDeprecated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSupplierDeprecated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSupplierDeprecated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSupplierDeprecated = fmt.Errorf("proto: unexpected end of group")
)
