// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pocket/supplier/event.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/pokt-network/poktroll/x/shared/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SupplierUnbondingReason int32

const (
	SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_UNSPECIFIED     SupplierUnbondingReason = 0
	SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_VOLUNTARY       SupplierUnbondingReason = 1
	SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_BELOW_MIN_STAKE SupplierUnbondingReason = 2
	SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_MIGRATION       SupplierUnbondingReason = 3
)

var SupplierUnbondingReason_name = map[int32]string{
	0: "SUPPLIER_UNBONDING_REASON_UNSPECIFIED",
	1: "SUPPLIER_UNBONDING_REASON_VOLUNTARY",
	2: "SUPPLIER_UNBONDING_REASON_BELOW_MIN_STAKE",
	3: "SUPPLIER_UNBONDING_REASON_MIGRATION",
}

var SupplierUnbondingReason_value = map[string]int32{
	"SUPPLIER_UNBONDING_REASON_UNSPECIFIED":     0,
	"SUPPLIER_UNBONDING_REASON_VOLUNTARY":       1,
	"SUPPLIER_UNBONDING_REASON_BELOW_MIN_STAKE": 2,
	"SUPPLIER_UNBONDING_REASON_MIGRATION":       3,
}

func (x SupplierUnbondingReason) String() string {
	return proto.EnumName(SupplierUnbondingReason_name, int32(x))
}

func (SupplierUnbondingReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{0}
}

// EventSupplierStaked is emitted when a supplier stake message is committed onchain.
type EventSupplierStaked struct {
	// The session end height of the last session in which the supplier was staked.
	SessionEndHeight int64  `protobuf:"varint,2,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
	OperatorAddress  string `protobuf:"bytes,3,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
}

func (m *EventSupplierStaked) Reset()         { *m = EventSupplierStaked{} }
func (m *EventSupplierStaked) String() string { return proto.CompactTextString(m) }
func (*EventSupplierStaked) ProtoMessage()    {}
func (*EventSupplierStaked) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{0}
}
func (m *EventSupplierStaked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSupplierStaked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventSupplierStaked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSupplierStaked.Merge(m, src)
}
func (m *EventSupplierStaked) XXX_Size() int {
	return m.Size()
}
func (m *EventSupplierStaked) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSupplierStaked.DiscardUnknown(m)
}

var xxx_messageInfo_EventSupplierStaked proto.InternalMessageInfo

func (m *EventSupplierStaked) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func (m *EventSupplierStaked) GetOperatorAddress() string {
	if m != nil {
		return m.OperatorAddress
	}
	return ""
}

// EventSupplierUnbondingBegin is emitted when an application unstake message
// is committed onchain, indicating that the supplier will now begin unbonding.
type EventSupplierUnbondingBegin struct {
	Supplier *types.Supplier         `protobuf:"bytes,1,opt,name=supplier,proto3" json:"supplier"`
	Reason   SupplierUnbondingReason `protobuf:"varint,2,opt,name=reason,proto3,enum=pocket.supplier.SupplierUnbondingReason" json:"reason"`
	// The session end height of the last session in which the supplier unbonding began.
	SessionEndHeight int64 `protobuf:"varint,3,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
	// The height at which supplier unbonding will end.
	UnbondingEndHeight int64 `protobuf:"varint,4,opt,name=unbonding_end_height,json=unbondingEndHeight,proto3" json:"unbonding_end_height"`
}

func (m *EventSupplierUnbondingBegin) Reset()         { *m = EventSupplierUnbondingBegin{} }
func (m *EventSupplierUnbondingBegin) String() string { return proto.CompactTextString(m) }
func (*EventSupplierUnbondingBegin) ProtoMessage()    {}
func (*EventSupplierUnbondingBegin) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{1}
}
func (m *EventSupplierUnbondingBegin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSupplierUnbondingBegin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventSupplierUnbondingBegin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSupplierUnbondingBegin.Merge(m, src)
}
func (m *EventSupplierUnbondingBegin) XXX_Size() int {
	return m.Size()
}
func (m *EventSupplierUnbondingBegin) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSupplierUnbondingBegin.DiscardUnknown(m)
}

var xxx_messageInfo_EventSupplierUnbondingBegin proto.InternalMessageInfo

func (m *EventSupplierUnbondingBegin) GetSupplier() *types.Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *EventSupplierUnbondingBegin) GetReason() SupplierUnbondingReason {
	if m != nil {
		return m.Reason
	}
	return SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_UNSPECIFIED
}

func (m *EventSupplierUnbondingBegin) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func (m *EventSupplierUnbondingBegin) GetUnbondingEndHeight() int64 {
	if m != nil {
		return m.UnbondingEndHeight
	}
	return 0
}

// EventSupplierUnbondingEnd is emitted when an supplier has completed
// unbonding. The unbonding period is determined by the shared param,
// supplier_unbonding_period_sessions.
type EventSupplierUnbondingEnd struct {
	Supplier *types.Supplier         `protobuf:"bytes,1,opt,name=supplier,proto3" json:"supplier"`
	Reason   SupplierUnbondingReason `protobuf:"varint,2,opt,name=reason,proto3,enum=pocket.supplier.SupplierUnbondingReason" json:"reason"`
	// The session end height of the session in which the supplier unbonding endeded.
	SessionEndHeight int64 `protobuf:"varint,3,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
	// The height at which supplier unbonding will end.
	UnbondingEndHeight int64 `protobuf:"varint,4,opt,name=unbonding_end_height,json=unbondingEndHeight,proto3" json:"unbonding_end_height"`
}

func (m *EventSupplierUnbondingEnd) Reset()         { *m = EventSupplierUnbondingEnd{} }
func (m *EventSupplierUnbondingEnd) String() string { return proto.CompactTextString(m) }
func (*EventSupplierUnbondingEnd) ProtoMessage()    {}
func (*EventSupplierUnbondingEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{2}
}
func (m *EventSupplierUnbondingEnd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSupplierUnbondingEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventSupplierUnbondingEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSupplierUnbondingEnd.Merge(m, src)
}
func (m *EventSupplierUnbondingEnd) XXX_Size() int {
	return m.Size()
}
func (m *EventSupplierUnbondingEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSupplierUnbondingEnd.DiscardUnknown(m)
}

var xxx_messageInfo_EventSupplierUnbondingEnd proto.InternalMessageInfo

func (m *EventSupplierUnbondingEnd) GetSupplier() *types.Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *EventSupplierUnbondingEnd) GetReason() SupplierUnbondingReason {
	if m != nil {
		return m.Reason
	}
	return SupplierUnbondingReason_SUPPLIER_UNBONDING_REASON_UNSPECIFIED
}

func (m *EventSupplierUnbondingEnd) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

func (m *EventSupplierUnbondingEnd) GetUnbondingEndHeight() int64 {
	if m != nil {
		return m.UnbondingEndHeight
	}
	return 0
}

// EventSupplierUnbondingCanceled is emitted when an supplier which was unbonding
// successfully (re-)stakes before the unbonding period has elapsed. An EventSupplierStaked
// event will also be emitted immediately after this event.
type EventSupplierUnbondingCanceled struct {
	Supplier *types.Supplier `protobuf:"bytes,1,opt,name=supplier,proto3" json:"supplier"`
	// The exact height at which the supplier unbonding was canceled.
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height"`
	// The session end height of the session in which the supplier unbonding was canceled.
	SessionEndHeight int64 `protobuf:"varint,2,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height"`
}

func (m *EventSupplierUnbondingCanceled) Reset()         { *m = EventSupplierUnbondingCanceled{} }
func (m *EventSupplierUnbondingCanceled) String() string { return proto.CompactTextString(m) }
func (*EventSupplierUnbondingCanceled) ProtoMessage()    {}
func (*EventSupplierUnbondingCanceled) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{3}
}
func (m *EventSupplierUnbondingCanceled) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSupplierUnbondingCanceled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventSupplierUnbondingCanceled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSupplierUnbondingCanceled.Merge(m, src)
}
func (m *EventSupplierUnbondingCanceled) XXX_Size() int {
	return m.Size()
}
func (m *EventSupplierUnbondingCanceled) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSupplierUnbondingCanceled.DiscardUnknown(m)
}

var xxx_messageInfo_EventSupplierUnbondingCanceled proto.InternalMessageInfo

func (m *EventSupplierUnbondingCanceled) GetSupplier() *types.Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *EventSupplierUnbondingCanceled) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *EventSupplierUnbondingCanceled) GetSessionEndHeight() int64 {
	if m != nil {
		return m.SessionEndHeight
	}
	return 0
}

// EventSupplierServiceConfigActivated is emitted when a supplier service configuration
// becomes effective at a specific block height.
type EventSupplierServiceConfigActivated struct {
	// activation_height indicates the block height at which the new service
	// configurations became active.
	ActivationHeight int64  `protobuf:"varint,2,opt,name=activation_height,json=activationHeight,proto3" json:"activation_height"`
	OperatorAddress  string `protobuf:"bytes,3,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	ServiceId        string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (m *EventSupplierServiceConfigActivated) Reset()         { *m = EventSupplierServiceConfigActivated{} }
func (m *EventSupplierServiceConfigActivated) String() string { return proto.CompactTextString(m) }
func (*EventSupplierServiceConfigActivated) ProtoMessage()    {}
func (*EventSupplierServiceConfigActivated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ff4bce83a0142ab, []int{4}
}
func (m *EventSupplierServiceConfigActivated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventSupplierServiceConfigActivated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EventSupplierServiceConfigActivated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSupplierServiceConfigActivated.Merge(m, src)
}
func (m *EventSupplierServiceConfigActivated) XXX_Size() int {
	return m.Size()
}
func (m *EventSupplierServiceConfigActivated) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSupplierServiceConfigActivated.DiscardUnknown(m)
}

var xxx_messageInfo_EventSupplierServiceConfigActivated proto.InternalMessageInfo

func (m *EventSupplierServiceConfigActivated) GetActivationHeight() int64 {
	if m != nil {
		return m.ActivationHeight
	}
	return 0
}

func (m *EventSupplierServiceConfigActivated) GetOperatorAddress() string {
	if m != nil {
		return m.OperatorAddress
	}
	return ""
}

func (m *EventSupplierServiceConfigActivated) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func init() {
	proto.RegisterEnum("pocket.supplier.SupplierUnbondingReason", SupplierUnbondingReason_name, SupplierUnbondingReason_value)
	proto.RegisterType((*EventSupplierStaked)(nil), "pocket.supplier.EventSupplierStaked")
	proto.RegisterType((*EventSupplierUnbondingBegin)(nil), "pocket.supplier.EventSupplierUnbondingBegin")
	proto.RegisterType((*EventSupplierUnbondingEnd)(nil), "pocket.supplier.EventSupplierUnbondingEnd")
	proto.RegisterType((*EventSupplierUnbondingCanceled)(nil), "pocket.supplier.EventSupplierUnbondingCanceled")
	proto.RegisterType((*EventSupplierServiceConfigActivated)(nil), "pocket.supplier.EventSupplierServiceConfigActivated")
}

func init() { proto.RegisterFile("pocket/supplier/event.proto", fileDescriptor_0ff4bce83a0142ab) }

var fileDescriptor_0ff4bce83a0142ab = []byte{
	// 634 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xcf, 0x6e, 0xd3, 0x30,
	0x1c, 0xae, 0xdb, 0x69, 0xda, 0x0c, 0x62, 0x21, 0x0c, 0xd6, 0x6d, 0x90, 0x4e, 0x9d, 0x10, 0x1d,
	0xd2, 0x12, 0x6d, 0x3c, 0x41, 0xd2, 0x85, 0x91, 0xd1, 0x25, 0x53, 0xb2, 0x82, 0xe0, 0x12, 0xa5,
	0x89, 0x49, 0xad, 0x76, 0x76, 0x14, 0x7b, 0x05, 0xde, 0x82, 0xa7, 0xe0, 0x09, 0x38, 0x23, 0x2e,
	0x48, 0x5c, 0x90, 0x26, 0xb8, 0xec, 0x54, 0xa1, 0xee, 0xd6, 0xa7, 0x40, 0xcb, 0x9f, 0x8e, 0xb2,
	0x16, 0x84, 0xb4, 0x23, 0x27, 0xdb, 0xdf, 0xf7, 0xf9, 0xf7, 0xe7, 0x73, 0xec, 0xc0, 0xd5, 0x88,
	0xfa, 0x1d, 0xc4, 0x15, 0x76, 0x1c, 0x45, 0x5d, 0x8c, 0x62, 0x05, 0xf5, 0x10, 0xe1, 0x72, 0x14,
	0x53, 0x4e, 0xc5, 0x85, 0x94, 0x94, 0x73, 0x72, 0x65, 0xd9, 0xa7, 0xec, 0x88, 0x32, 0x37, 0xa1,
	0x95, 0x74, 0x91, 0x6a, 0x57, 0x16, 0x43, 0x1a, 0xd2, 0x14, 0x3f, 0x9f, 0x65, 0xa8, 0x94, 0x6a,
	0x94, 0x96, 0xc7, 0x90, 0xd2, 0xdb, 0x6a, 0x21, 0xee, 0x6d, 0x29, 0x3e, 0xc5, 0x24, 0xe3, 0xef,
	0xe6, 0xe9, 0xdb, 0x5e, 0x8c, 0x82, 0x51, 0x15, 0x29, 0x5b, 0x7d, 0x0f, 0xe0, 0x2d, 0xfd, 0xbc,
	0x1e, 0x27, 0xc3, 0x1d, 0xee, 0x75, 0x50, 0x20, 0xee, 0x40, 0x91, 0x21, 0xc6, 0x30, 0x25, 0x2e,
	0x22, 0x81, 0xdb, 0x46, 0x38, 0x6c, 0xf3, 0x72, 0x71, 0x0d, 0xd4, 0x4a, 0xda, 0x9d, 0x61, 0xbf,
	0x32, 0x81, 0xb5, 0x85, 0x0c, 0xd3, 0x49, 0xf0, 0x24, 0x41, 0xc4, 0x3a, 0x14, 0x68, 0x84, 0x62,
	0x8f, 0xd3, 0xd8, 0xf5, 0x82, 0x20, 0x46, 0x8c, 0x95, 0x4b, 0x6b, 0xa0, 0x36, 0xaf, 0x95, 0xbf,
	0x7d, 0xd8, 0x5c, 0xcc, 0xba, 0x53, 0x53, 0xc6, 0xe1, 0x31, 0x26, 0xa1, 0xbd, 0x90, 0xef, 0xc8,
	0xe0, 0xbd, 0x99, 0x39, 0x20, 0x14, 0xab, 0x9f, 0x8a, 0x70, 0x75, 0xac, 0xd0, 0x26, 0x69, 0x51,
	0x12, 0x60, 0x12, 0x6a, 0x28, 0xc4, 0x44, 0x54, 0xe1, 0x5c, 0xde, 0x5a, 0x19, 0xac, 0x81, 0xda,
	0xb5, 0xed, 0x25, 0x39, 0xf7, 0x36, 0xe9, 0x5c, 0xce, 0x37, 0x6a, 0xd7, 0x87, 0xfd, 0xca, 0x48,
	0x6c, 0x8f, 0x66, 0x62, 0x03, 0xce, 0xc6, 0xc8, 0x63, 0x94, 0x24, 0x7d, 0xde, 0xd8, 0xae, 0xc9,
	0xbf, 0x1d, 0x8e, 0x7c, 0x29, 0xb7, 0x9d, 0xe8, 0x35, 0x38, 0xec, 0x57, 0xb2, 0xbd, 0x76, 0x36,
	0x4e, 0x71, 0xb0, 0xf4, 0x8f, 0x0e, 0xee, 0xc1, 0xc5, 0xe3, 0x3c, 0xd9, 0xaf, 0x71, 0x66, 0x92,
	0x38, 0xe5, 0x61, 0xbf, 0x32, 0x91, 0xb7, 0xc5, 0x11, 0x3a, 0x8a, 0x55, 0xfd, 0x58, 0x84, 0xcb,
	0x93, 0x2d, 0xd4, 0x49, 0xf0, 0xdf, 0xc0, 0xbf, 0x1b, 0xf8, 0x15, 0x40, 0x69, 0xb2, 0x81, 0x75,
	0x8f, 0xf8, 0xa8, 0x8b, 0xae, 0xc4, 0xc5, 0x2a, 0x9c, 0x1d, 0xeb, 0x35, 0xf1, 0x26, 0xab, 0x2a,
	0x1b, 0xaf, 0xe6, 0x7a, 0x56, 0xbf, 0x03, 0xb8, 0x3e, 0x7e, 0xf9, 0x51, 0xdc, 0xc3, 0x3e, 0xaa,
	0x53, 0xf2, 0x0a, 0x87, 0xaa, 0xcf, 0x71, 0xcf, 0xe3, 0x28, 0x10, 0x35, 0x78, 0xd3, 0x4b, 0x17,
	0xe7, 0x21, 0xc7, 0x92, 0xdd, 0x1e, 0xf6, 0x2b, 0x97, 0x49, 0x5b, 0xb8, 0x80, 0xae, 0xf0, 0x29,
	0x10, 0xef, 0x41, 0xc8, 0xd2, 0x12, 0x5d, 0x1c, 0x24, 0x47, 0x38, 0x6f, 0xcf, 0x67, 0x88, 0x11,
	0xa4, 0x2f, 0xc5, 0xc3, 0xcf, 0x00, 0x2e, 0x4d, 0xf9, 0xce, 0xc4, 0x0d, 0x78, 0xdf, 0x69, 0x1e,
	0x1c, 0x34, 0x0c, 0xdd, 0x76, 0x9b, 0xa6, 0x66, 0x99, 0x3b, 0x86, 0xb9, 0xeb, 0xda, 0xba, 0xea,
	0x58, 0xa6, 0xdb, 0x34, 0x9d, 0x03, 0xbd, 0x6e, 0x3c, 0x36, 0xf4, 0x1d, 0xa1, 0x20, 0x3e, 0x80,
	0xeb, 0xd3, 0xa5, 0xcf, 0xac, 0x46, 0xd3, 0x3c, 0x54, 0xed, 0x17, 0x02, 0x10, 0x37, 0xe1, 0xc6,
	0x74, 0xa1, 0xa6, 0x37, 0xac, 0xe7, 0xee, 0xbe, 0x61, 0xba, 0xce, 0xa1, 0xfa, 0x54, 0x17, 0x8a,
	0x7f, 0x8e, 0xbb, 0x6f, 0xec, 0xda, 0xea, 0xa1, 0x61, 0x99, 0x42, 0x49, 0xb3, 0xbe, 0x0c, 0x24,
	0x70, 0x32, 0x90, 0xc0, 0xe9, 0x40, 0x02, 0x3f, 0x06, 0x12, 0x78, 0x77, 0x26, 0x15, 0x4e, 0xce,
	0xa4, 0xc2, 0xe9, 0x99, 0x54, 0x78, 0xb9, 0x15, 0x62, 0xde, 0x3e, 0x6e, 0xc9, 0x3e, 0x3d, 0x52,
	0x22, 0xda, 0xe1, 0x9b, 0x04, 0xf1, 0xd7, 0x34, 0xee, 0x24, 0x8b, 0x98, 0x76, 0xbb, 0xca, 0x9b,
	0x8b, 0x3f, 0x0e, 0x7f, 0x1b, 0x21, 0xd6, 0x9a, 0x4d, 0x9e, 0xfc, 0x47, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xbf, 0xd6, 0xac, 0xb6, 0x91, 0x06, 0x00, 0x00,
}

func (m *EventSupplierStaked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSupplierStaked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSupplierStaked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OperatorAddress) > 0 {
		i -= len(m.OperatorAddress)
		copy(dAtA[i:], m.OperatorAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OperatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *EventSupplierUnbondingBegin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSupplierUnbondingBegin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSupplierUnbondingBegin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnbondingEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.UnbondingEndHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.Reason != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x10
	}
	if m.Supplier != nil {
		{
			size, err := m.Supplier.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventSupplierUnbondingEnd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSupplierUnbondingEnd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSupplierUnbondingEnd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnbondingEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.UnbondingEndHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.Reason != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x10
	}
	if m.Supplier != nil {
		{
			size, err := m.Supplier.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventSupplierUnbondingCanceled) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSupplierUnbondingCanceled) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSupplierUnbondingCanceled) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Height != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x18
	}
	if m.SessionEndHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.SessionEndHeight))
		i--
		dAtA[i] = 0x10
	}
	if m.Supplier != nil {
		{
			size, err := m.Supplier.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventSupplierServiceConfigActivated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventSupplierServiceConfigActivated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventSupplierServiceConfigActivated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ServiceId) > 0 {
		i -= len(m.ServiceId)
		copy(dAtA[i:], m.ServiceId)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.ServiceId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OperatorAddress) > 0 {
		i -= len(m.OperatorAddress)
		copy(dAtA[i:], m.OperatorAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OperatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ActivationHeight != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.ActivationHeight))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func encodeVarintEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventSupplierStaked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	l = len(m.OperatorAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventSupplierUnbondingBegin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Supplier != nil {
		l = m.Supplier.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.Reason != 0 {
		n += 1 + sovEvent(uint64(m.Reason))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	if m.UnbondingEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.UnbondingEndHeight))
	}
	return n
}

func (m *EventSupplierUnbondingEnd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Supplier != nil {
		l = m.Supplier.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.Reason != 0 {
		n += 1 + sovEvent(uint64(m.Reason))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	if m.UnbondingEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.UnbondingEndHeight))
	}
	return n
}

func (m *EventSupplierUnbondingCanceled) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Supplier != nil {
		l = m.Supplier.Size()
		n += 1 + l + sovEvent(uint64(l))
	}
	if m.SessionEndHeight != 0 {
		n += 1 + sovEvent(uint64(m.SessionEndHeight))
	}
	if m.Height != 0 {
		n += 1 + sovEvent(uint64(m.Height))
	}
	return n
}

func (m *EventSupplierServiceConfigActivated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActivationHeight != 0 {
		n += 1 + sovEvent(uint64(m.ActivationHeight))
	}
	l = len(m.OperatorAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.ServiceId)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func sovEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEvent(x uint64) (n int) {
	return sovEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventSupplierStaked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSupplierStaked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSupplierStaked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventSupplierUnbondingBegin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSupplierUnbondingBegin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSupplierUnbondingBegin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplier", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Supplier == nil {
				m.Supplier = &types.Supplier{}
			}
			if err := m.Supplier.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= SupplierUnbondingReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEndHeight", wireType)
			}
			m.UnbondingEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnbondingEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventSupplierUnbondingEnd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSupplierUnbondingEnd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSupplierUnbondingEnd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplier", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Supplier == nil {
				m.Supplier = &types.Supplier{}
			}
			if err := m.Supplier.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= SupplierUnbondingReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEndHeight", wireType)
			}
			m.UnbondingEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnbondingEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventSupplierUnbondingCanceled) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSupplierUnbondingCanceled: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSupplierUnbondingCanceled: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplier", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Supplier == nil {
				m.Supplier = &types.Supplier{}
			}
			if err := m.Supplier.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionEndHeight", wireType)
			}
			m.SessionEndHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionEndHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventSupplierServiceConfigActivated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventSupplierServiceConfigActivated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventSupplierServiceConfigActivated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivationHeight", wireType)
			}
			m.ActivationHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivationHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEvent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEvent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEvent = fmt.Errorf("proto: unexpected end of group")
)
