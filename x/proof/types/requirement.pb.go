// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: poktroll/proof/requirement.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProofRequirementReason int32

const (
	ProofRequirementReason_NOT_REQUIRED  ProofRequirementReason = 0
	ProofRequirementReason_PROBABILISTIC ProofRequirementReason = 1
	ProofRequirementReason_THRESHOLD     ProofRequirementReason = 2
)

var ProofRequirementReason_name = map[int32]string{
	0: "NOT_REQUIRED",
	1: "PROBABILISTIC",
	2: "THRESHOLD",
}

var ProofRequirementReason_value = map[string]int32{
	"NOT_REQUIRED":  0,
	"PROBABILISTIC": 1,
	"THRESHOLD":     2,
}

func (x ProofRequirementReason) String() string {
	return proto.EnumName(ProofRequirementReason_name, int32(x))
}

func (ProofRequirementReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33d036c0b01e3395, []int{0}
}

func init() {
	proto.RegisterEnum("poktroll.proof.ProofRequirementReason", ProofRequirementReason_name, ProofRequirementReason_value)
}

func init() { proto.RegisterFile("poktroll/proof/requirement.proto", fileDescriptor_33d036c0b01e3395) }

var fileDescriptor_33d036c0b01e3395 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0xc8, 0xcf, 0x2e,
	0x29, 0xca, 0xcf, 0xc9, 0xd1, 0x2f, 0x28, 0xca, 0xcf, 0x4f, 0xd3, 0x2f, 0x4a, 0x2d, 0x2c, 0xcd,
	0x2c, 0x4a, 0xcd, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x83, 0xa9,
	0xd0, 0x03, 0xab, 0xd0, 0xf2, 0xe1, 0x12, 0x0b, 0x00, 0x31, 0x82, 0x10, 0x2a, 0x83, 0x52, 0x13,
	0x8b, 0xf3, 0xf3, 0x84, 0x04, 0xb8, 0x78, 0xfc, 0xfc, 0x43, 0xe2, 0x83, 0x5c, 0x03, 0x43, 0x3d,
	0x83, 0x5c, 0x5d, 0x04, 0x18, 0x84, 0x04, 0xb9, 0x78, 0x03, 0x82, 0xfc, 0x9d, 0x1c, 0x9d, 0x3c,
	0x7d, 0x3c, 0x83, 0x43, 0x3c, 0x9d, 0x05, 0x18, 0x85, 0x78, 0xb9, 0x38, 0x43, 0x3c, 0x82, 0x5c,
	0x83, 0x3d, 0xfc, 0x7d, 0x5c, 0x04, 0x98, 0x9c, 0x3c, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48,
	0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1,
	0x58, 0x8e, 0x21, 0x4a, 0x2f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f,
	0xe4, 0x04, 0xdd, 0xbc, 0xd4, 0x92, 0xf2, 0xfc, 0xa2, 0x6c, 0x7d, 0xb8, 0x8b, 0x2b, 0xa0, 0x6e,
	0x2e, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0x3b, 0xd7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x12, 0x9e, 0x3a, 0x15, 0xd2, 0x00, 0x00, 0x00,
}
