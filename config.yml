version: 1
build:
  main: cmd/pocketd
  binary: pocketd
accounts:
  - name: faucet
    mnemonic: "baby advance work soap slow exclude blur humble lucky rough teach wide chuckle captain rack laundry butter main very cannon donate armor dress follow"
    coins:
      - 999999999999999999upokt
  # PNF represents the multisig address that acts on behalf of the DAO
  - name: pnf
    mnemonic: "crumble shrimp south strategy speed kick green topic stool seminar track stand rhythm almost bubble pet knock steel pull flag weekend country major blade"
    coins:
      - 69000000000000000000042upokt
  - name: validator1
    mnemonic: "creek path rule retire evolve vehicle bargain champion roof whisper prize endorse unknown anchor fashion energy club sauce elder parent cotton old affair visa"
    coins:
      - 900000000000000upokt
  - name: app1
    mnemonic: "mention spy involve verb exercise fiction catalog order agent envelope mystery text defy sing royal fringe return face alpha knife wonder vocal virus drum"
    coins:
      - 100000000upokt
  - name: app2
    mnemonic: "material little labor strong search device trick amateur action crouch invite glide provide elite mango now paper sense found hamster neglect work install bulk"
    coins:
      - 200000000upokt
  - name: app3
    mnemonic: "involve clean slab term real human green immune valid swing protect talk silent unique cart few ice era right thunder again drop among bounce"
    coins:
      - 300000000upokt
  - name: app4
    mnemonic: "blade light diagram grocery quit orchard patient wonder usual category later want offer increase blush this business protect village top cricket laundry holiday measure"
    coins:
      - 300000000upokt
  - name: apptiny
    mnemonic: "worry pupil rival such jump pitch flame prosper tattoo eternal round receive cube crowd remove afraid garment brand toy nut guitar toy sausage fragile"
    coins:
      - 1000000upokt # 1 POKT
  - name: supplier1
    mnemonic: "cool industry busy tumble funny relax error state height like board wing goat emerge visual idle never unveil announce hill primary okay spatial frog"
    coins:
      - 110000000upokt
  - name: supplier2
    mnemonic: "peanut hen enroll meat legal have error input bulk later correct denial onion fossil wing excuse elephant object apology switch claim rare decide surface"
    coins:
      - 220000000upokt
  - name: supplier3
    mnemonic: "client city senior tenant source soda spread buffalo shaft amused bar carbon keen off feel coral easily announce metal orphan sustain maple expand loop"
    coins:
      - 330000000upokt
  - name: gateway1
    mnemonic: "salt iron goat also absorb depend involve agent apology between lift shy door left bulb arrange industry father jelly olive rifle return predict into"
    coins:
      - 100000000upokt
  - name: gateway2
    mnemonic: "suffer wet jelly furnace cousin flip layer render finish frequent pledge feature economy wink like water disease final erase goat include apple state furnace"
    coins:
      - 200000000upokt
  - name: gateway3
    mnemonic: "elder spatial erosion soap athlete tide subject recipe also awkward head pattern cart version beach usual oxygen confirm erupt diamond maze smooth census garment"
    coins:
      - 300000000upokt
  - name: source_owner_anvil
    mnemonic: "burden effort glue note honey erupt fiscal vote gold addict toy flag spare wrap chest table bomb sort arena phone sadness sustain urge wink"
    coins:
      - 6900000000000upokt
  - name: source_owner_ollama
    mnemonic: "initial scorpion soccer decrease sorry convince donor canoe bid pill monster today cycle slot judge bulb dismiss reject hurt mesh glare fork sustain wash"
    coins:
      - 6900000000000upokt
  - name: unauthorized
    mnemonic: "abuse tumble whip pioneer immense pipe method note upon glory switch rail metal camp gasp top require rain party total struggle glance between fossil"
    coins:
      - 100000upokt
faucet:
  name: faucet
  coins:
    - 10000upokt
client:
  typescript:
    path: ts-client
  hooks:
    path: react/src/hooks
  openapi:
    path: docs/static/openapi.yml
validators:
  - name: validator1
    bonded: 900000000upokt
    # DEV_NOTE: adjust `cmd/pocketd/cmd/config.go` to change the default options. The section below **ONLY** changes
    # the values for the first validator, and the config is rendered using `ignite` cli. This is primarily used for
    # LocalNet. Other participants of the network are relying on `pocketd init`, which gets values from `cmd/config.go`.
    app:
      # DEV_NOTE: Ignite does not carry over all defaults, so we are going to match `minimum-gas-prices` with `cmd/config.go`.
      # See the enhancement request here: https://github.com/ignite/cli/issues/4340
      # TODO_BETA(@okdas, #794): turn on `minimum-gas-prices` back
      # minimum-gas-prices: 0.000000001upokt
      telemetry:
        enabled: true
      pocket:
        telemetry:
          # "high" produces a lot of timeseries.
          # ONLY suitable for small networks such as LocalNet.
          cardinality-level: high
      api:
        swagger: true
    config:
      moniker: "validator1"
      consensus:
        timeout_commit: "2s"
        timeout_propose: "2s"
      instrumentation:
        prometheus: true
      log_level: "info"
      # Increase the rpc and mempool max bytes to support large transactions.
      # DEV_NOTE: These values were selected arbitrarily, but chosen to be large,
      # as a result of load testing and seeing large proof messages during the
      # Claim & Proof lifecycle.
      rpc:
        # Controls how large any single RPC request accepted by the CometBFT
        # server (offchain) can be.
        max_body_bytes: "100000000"
      mempool:
        # Control how big any single transaction accepted by the CometBFT server
        # (offchain) can be.
        # Since multiple messages are bundled into a single transaction,
        # max_tx_bytes needs to be increased alongside max_txs_bytes as well.
        max_tx_bytes: "100000000"
    client:
      chain-id: pocket

# We can persist arbitrary genesis values via 1 to 1 mapping to genesis.json
genesis:
  app_name: pocket
  chain_id: pocket
  app_state:
    # See the mint module for all other relevant parameters.
    # Ignite generate defaults in genesis.json with the values as explicit overrides.
    # https://docs.cosmos.network/main/build/modules/mint
    mint:
      params:
        mint_denom: upokt
        # Note that in Pocket Network, the majority of the inflation/deflation
        # comes from the utility of network, not just the validators that
        # secure it. Therefore, the inflation params of x/mint are set to 0.
        # See x/tokenomics for all details related to token inflation.
        inflation_rate_change: "0.0"
        inflation_max: "0.0"
        inflation_min: "0.0"
        # These parameters are included for posterity but commented out for clarity
        # goal_bonded: "NA"
        # blocks_per_year: "NA"
        # max_supply: "NA"
    staking:
      params:
        bond_denom: upokt
        # TODO_BETA(@okdas): Update this to 10 for Beta TestNet.
        max_validators: 1
    crisis:
      constant_fee:
        amount: "10000"
        denom: upokt
    gov:
      params:
        min_deposit:
          - amount: "10000"
            denom: upokt
    bank:
      supply:
        - amount: "1202000272"
          denom: upokt
      balances:
        # Application module
        - address: pokt1rl3gjgzexmplmds3tq3r3yk84zlwdl6djzgsvm
          coins:
            # TODO_MAINNET(@olshansk): Pass config.yml into ChatGPT to build a script
            # that ensures the amounts line up
            - amount: "200000136" # MUST BE equal to the total of all app stakes below
              denom: upokt
        # Supplier module
        - address: pokt1j40dzzmn6cn9kxku7a5tjnud6hv37vesr5ccaa
          coins:
            - amount: "1000068" # MUST BE equal to the total of all supplier stakes below
              denom: upokt
        # Gateway module
        - address: pokt1f6j7u6875p2cvyrgjr0d2uecyzah0kget9vlpl
          coins:
            - amount: "1000068" # MUST BE equal to the total of all gateway stakes below
              denom: upokt
        # Service module
        - address: pokt1nhmtqf4gcmpxu0p6e53hpgtwj0llmsqpxtumcf
          coins:
            - amount: "1000000000" # MUST BE equal to one add_service_fee below
              denom: upokt
    # For ref, see proto/poktroll/application/params.proto
    application:
      params:
        # 6 was arbitrarily selected taking into consideration two factors:
        # - The number of Gateways users usually round robin through.
        # - Potential performance impacts on ring signatures.
        max_delegated_gateways: "7"
        min_stake:
          # TODO_BETA(@bryanchriswhite): Determine realistic amount for minimum application stake amount.
          amount: "100000000" # 100 POKT
          denom: upokt
      applicationList:
        - address: pokt1mrqt5f7qh8uxs27cjm9t7v9e74a9vvdnq5jva4
          delegatee_gateway_addresses:
            [pokt15vzxjqklzjtlz7lahe8z2dfe9nm5vxwwmscne4]
          service_configs:
            - service_id: anvil
          stake:
            # NB: This value should be exactly 1upokt smaller than the value in
            # `application1_stake_config.yaml` so that the stake command causes a state change.
            amount: "100000068" # ~100 POKT
            denom: upokt
        - address: pokt184zvylazwu4queyzpl0gyz9yf5yxm2kdhh9hpm
          delegatee_gateway_addresses:
            [pokt15vzxjqklzjtlz7lahe8z2dfe9nm5vxwwmscne4]
          service_configs:
            - service_id: rest
          stake:
            # NB: This value should be exactly 1upokt smaller than the value in
            # `application1_stake_config.yaml` so that the stake command causes a state change.
            amount: "100000068" # ~100 POKT
            denom: upokt
        - address: pokt1lqyu4v88vp8tzc86eaqr4lq8rwhssyn6rfwzex
          delegatee_gateway_addresses:
            [pokt15vzxjqklzjtlz7lahe8z2dfe9nm5vxwwmscne4]
          service_configs:
            - service_id: anvilws
          stake:
            amount: "100000068" # ~100 POKT
            denom: upokt
    # For ref, see proto/poktroll/supplier/params.proto
    supplier:
      params:
        # TODO_BETA(@bryanchriswhite): Determine realistic amount for minimum gateway stake amount.
        min_stake:
          amount: "1000000" # 1 POKT
          denom: upokt
        # TODO_BETA(@bryanchriswhite): Determine realistic amount for supplier staking fee.
        staking_fee:
          amount: "1" # 1 uPOKT
          denom: upokt
      supplierList:
        - owner_address: pokt19a3t4yunp0dlpfjrp7qwnzwlrzd5fzs2gjaaaj
          operator_address: pokt19a3t4yunp0dlpfjrp7qwnzwlrzd5fzs2gjaaaj
          services:
            - service_id: anvil
              endpoints:
                - configs: []
                  rpc_type: JSON_RPC
                  url: http://relayminer1:8545
              rev_share:
                - address: pokt19a3t4yunp0dlpfjrp7qwnzwlrzd5fzs2gjaaaj
                  rev_share_percentage: 100
            - service_id: anvilws
              endpoints:
                - configs: []
                  rpc_type: WEBSOCKET
                  url: ws://relayminer1:8545
              rev_share:
                - address: pokt19a3t4yunp0dlpfjrp7qwnzwlrzd5fzs2gjaaaj
                  rev_share_percentage: 100
          stake:
            # NB: This value should be exactly 1upokt smaller than the value in
            # `supplier1_stake_config.yaml` so that the stake command causes a state change.
            amount: "1000068"
            denom: upokt
    # For ref, see proto/poktroll/gateway/params.proto
    gateway:
      params:
        # TODO_BETA(@bryanchriswhite): Determine realistic amount for minimum gateway stake amount.
        min_stake:
          amount: "1000000" # 1 POKT
          denom: upokt
      gatewayList:
        - address: pokt15vzxjqklzjtlz7lahe8z2dfe9nm5vxwwmscne4
          stake:
            # NB: This value should be exactly 1upokt smaller than the value in
            # `gateway1_stake_config.yaml` so that the stake command causes a state change.
            amount: "1000068"
            denom: upokt
    # For ref, see proto/poktroll/service/params.proto
    service:
      params:
        add_service_fee:
          amount: "1000000000"
          denom: upokt
        target_num_relays: 100000 # 100K; arbitrary value that aligns with "reputable" volume.
      serviceList:
        - id: anvil
          name: "anvil"
          compute_units_per_relay: 1
          owner_address: pokt1cwnu460557x0z78jv3hhc7356hhkrgc86c87q5
        - id: anvilws
          name: "anvilws"
          compute_units_per_relay: 1
          owner_address: pokt1cwnu460557x0z78jv3hhc7356hhkrgc86c87q5
        - id: ollama
          name: "ollama"
          compute_units_per_relay: 1
          owner_address: pokt1mx0klkkrj6v3dw8gs4nzlq0cq8lsktmx35t03e
        - id: rest
          name: "rest"
          compute_units_per_relay: 1
          owner_address: pokt1mx0klkkrj6v3dw8gs4nzlq0cq8lsktmx35t03e
    # For ref, see proto/poktroll/proof/params.proto
    proof:
      params:
        proof_request_probability: "0.25"
        proof_requirement_threshold:
          amount: "20000000"
          denom: upokt
        proof_missing_penalty:
          amount: "320000000"
          denom: upokt
        proof_submission_fee:
          amount: "1000000"
          denom: upokt
    # For ref, see proto/poktroll/session/params.proto
    session:
      params:
        num_suppliers_per_session: 15
    # For ref, see proto/poktroll/tokenomics/params.proto
    tokenomics:
      params:
        mint_allocation_percentages:
          dao: 0.1 # DAO earns 10% of the global inflation during all claim settlements across all services.
          proposer: 0.05 # Block proposers earn 5% of the global inflation during all claim settlements across all services.
          supplier: 0.7 # Suppliers earn 70% of the global inflation during all claim settlements associated with the service they provide.
          source_owner: 0.15 # Service owners earn 15% of the global inflation during all claim settlements associated with their service.
          application: 0.0 # Application earns nothing from global inflation during all claim settlements.
        # The dao reward address SHOULD match that of the "pnf" below (i.e. `make pocketd_addr ACC_NAME=pnf`).
        # This is the address that will receive the dao/foundation rewards during claim settlement (global mint TLM).
        # TODO_MAINNET(@olshansk): Consolidate the usage of DAO/PNF throughout the configs & codebase.
        dao_reward_address: "pokt1eeeksh2tvkh7wzmfrljnhw4wrhs55lcuvmekkw"
        global_inflation_per_claim: 0.1
    # For ref, see proto/poktroll/shared/params.proto
    shared:
      params:
        num_blocks_per_session: 10 # At 1 minute blocks, this will lead to a new session every 10 minutes. Arbitrarily selected.
        grace_period_end_offset_blocks: 1 # Small value to smooth out session rollovers.
        claim_window_open_offset_blocks: 1 # Small (for speed) non-zero (for security) value to balance speed and security.
        claim_window_close_offset_blocks: 4 # Small (for speed) non-zero (for security) value to balance speed and security but must be larger than claim_window_open_offset_blocks.
        proof_window_open_offset_blocks: 0 # Set to zero to allow for immediate proof submission after the claim window closes.
        proof_window_close_offset_blocks: 4 # Small (for speed) non-zero (for security) value to balance speed and security but must be larger than proof_window_open_offset_blocks.
        supplier_unbonding_period_sessions: 1 # Small value to enable for quick testing & onboarding during LocalNet.
        application_unbonding_period_sessions: 1 # Small value to enable for quick testing & onboarding during LocalNet.
        gateway_unbonding_period_sessions: 1 # Small value to enable for quick testing & onboarding during LocalNet.
        compute_units_to_tokens_multiplier: 42 # Arbitrary value that acts as the answer to everything.
