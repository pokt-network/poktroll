apiVersion: batch/v1
kind: Job
metadata:
  name: ${JOB_NAME}
  namespace: ${NAMESPACE}
spec:
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      labels:
        pokt.network/purpose: e2e-tests
    spec:
      initContainers:
        # We need to make sure the services like validator, relayminer, appgate server, etc. work before we execute
        # an e2e test.
        # TODO_TECHDEBT(@okdas): move the code into a separate config map (protocol-infra) and mount it.
        - name: check-services
          image: ruby:3.0
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              set -x

              # Inline Ruby script to check HTTP statuses
              cat << 'EOF' > /tmp/check_services.rb
              require 'net/http'
              require 'uri'

              def check_http_status(endpoint)
                max_retries = 30
                retries = 0

                while retries < max_retries
                  puts "Checking HTTP status for the endpoint #{endpoint} (Attempt #{retries + 1}/#{max_retries})..."
                  uri = URI.parse("http://#{endpoint}")
                  response = Net::HTTP.get_response(uri)
                  http_status = response.code.to_i
                  puts "HTTP_STATUS: #{http_status}"
                  if http_status == 200
                    puts "HTTP request to #{endpoint} returned 200 OK."
                    return true
                  else
                    puts "HTTP request to #{endpoint} did not return 200 OK. Status code: #{http_status}. Retrying in 10 seconds..."
                  end

                  retries += 1
                  sleep 10
                end

                puts "Max retries reached for #{endpoint}. Exiting."
                exit 1
              end

              def main
                namespace = ARGV[0]
                validator_endpoint = "#{namespace}-validator-poktrolld:36657"
                appgate_server_endpoint = "#{namespace}-appgate-server:80"
                gateway_endpoint = "#{namespace}-gateway:80"
                relayminer_endpoint = "#{namespace}-relayminer:8545"

                puts "Validator Endpoint: #{validator_endpoint}"
                puts "Appgate Server Endpoint: #{appgate_server_endpoint}"
                puts "Gateway Endpoint: #{gateway_endpoint}"
                puts "Relayminer Endpoint: #{relayminer_endpoint}"

                check_http_status(validator_endpoint)
                check_http_status(appgate_server_endpoint)
                check_http_status(gateway_endpoint)
                check_http_status(relayminer_endpoint)
              end

              main if __FILE__ == $0
              EOF

              # Execute the Ruby script
              ruby /tmp/check_services.rb ${NAMESPACE}
      containers:
        - name: e2e-tests
          image: ghcr.io/pokt-network/poktrolld:${IMAGE_TAG}
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              # Copy files from the secret to the writable directory
              cp -Lr /tmp/keys/* /root/.poktroll/keyring-test/ && \
              echo "Listing /root/.poktroll/keyring-test/ after copying:"
              ls -l /root/.poktroll/keyring-test/ && \
              poktrolld q gateway list-gateway --node=$POCKET_NODE && \
              poktrolld q application list-application --node=$POCKET_NODE && \
              poktrolld q supplier list-supplier --node=$POCKET_NODE && \
              make acc_initialize_pubkeys && \
              go test -v ./e2e/tests/... -tags=e2e
          env:
            - name: POCKET_NODE
              value: tcp://${NAMESPACE}-validator-poktrolld:36657
            - name: VALIDATOR_RPC_ENDPOINT
              value: ${NAMESPACE}-validator-poktrolld:36657
            - name: E2E_DEBUG_OUTPUT
              value: "false" # Flip to true to see the command and result of the execution
            - name: POKTROLLD_HOME
              value: /root/.poktroll
            - name: APPGATE_SERVER_URL
              value: http://${NAMESPACE}-appgate-server:80
            - name: GATEWAY_URL
              value: http://${NAMESPACE}-gateway:80
          volumeMounts:
            - mountPath: /root/.poktroll/keyring-test/
              name: writable-keys-volume
            - mountPath: /root/.poktroll/config/
              name: configs-volume
            - mountPath: /tmp/keys
              name: non-writable-keys-volume
              readOnly: true
      restartPolicy: Never
      volumes:
        - name: writable-keys-volume
          emptyDir: {}
        - name: non-writable-keys-volume
          secret:
            secretName: keys-${IMAGE_TAG}
        - name: configs-volume
          configMap:
            name: configs-${IMAGE_TAG}
      serviceAccountName: default
  backoffLimit: 0
