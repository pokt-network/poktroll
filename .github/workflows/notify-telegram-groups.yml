name: Notify Telegram Groups

# Manually trigger this workflow here: https://github.com/pokt-network/poktroll/actions/workflows/notify-telegram-groups.yml
on:
  workflow_dispatch:
  # Uncomment the lines below to automatically trigger on release publication
  # This is commented out to avoid premature notifications
  # release:
  #   types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest
    # Uncomment the line below when enabling automatic triggers
    # if: github.event.release.prerelease == false
    steps:
      - name: Get latest release
        id: get_release
        run: |
          # Get latest release info from GitHub API
          RELEASE_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")

          # Extract release details and properly escape for GitHub Actions
          RELEASE_NAME=$(echo "$RELEASE_INFO" | jq -r '.name')
          RELEASE_URL=$(echo "$RELEASE_INFO" | jq -r '.html_url')

          echo "Latest release: $RELEASE_NAME"
          echo "Release URL: $RELEASE_URL"

          # Handle multiline release body properly
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "release_url=$RELEASE_URL" >> $GITHUB_OUTPUT

          # Use EOF delimiter for multiline content
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_INFO" | jq -r '.body' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send release to Telegram groups
        run: |
          # Pocket Network Bot Testing Group
          CHAT_1="-1002895286734"
          # BitGet <> Pocket Network (POKT)
          CHAT_2="-4954094158"
          # ByBit <> POKT
          CHAT_3="-1002730340404"
          # CoinEx <> POKT
          CHAT_4="-1001946726820"
          # Mr. Yang <> Grove / POKT
          CHAT_5="-1002038833795"
          # MEXC <> POKT
          CHAT_6="-1002815210935"
          # OKX <> Pocket Network
          CHAT_7="-1001901668586"
          # OrangeX <> Grove (POKT)
          CHAT_8="-1002030782436"
          # POKT & Gate.io
          CHAT_9="-1001717732565"
          # POKT Network | AscendEX
          CHAT_10="-4565872373"
          # Uphold <> Grove (POKT)
          CHAT_11="-1002227693360"
          # Pokt <> Kraken {EF introduction}
          CHAT_12="-1002405763552"
          # Bitrue & Pocket Network
          CHAT_13="-618542738"
          # HTX <> POKT
          CHAT_14="-1002898513049"
          # POKT <> Upbit
          CHAT_15="-1002653157934"
          # KuCoin <> POKT
          CHAT_16="-775612675"

          # Safely construct message using printf to avoid command execution
          RELEASE_NAME="${{ steps.get_release.outputs.release_name }}"
          RELEASE_URL="${{ steps.get_release.outputs.release_url }}"

          # Read release body and escape it properly to prevent command execution
          RELEASE_BODY=$(cat << 'EOF'
          ${{ steps.get_release.outputs.release_body }}
          EOF
          )

          # Create message with Markdown formatting (simpler than MarkdownV2)
          MESSAGE=$(printf "ðŸ“£ The *%s release is live!* ðŸ“£\n[View the full release here](%s)\n\n%s" "$RELEASE_NAME" "$RELEASE_URL" "$RELEASE_BODY")

          # Function to send message to a chat
          send_message() {
            local chat_id="$1"
            local chat_name="$2"
            echo "Sending to $chat_id ($chat_name)"
            curl -s -X POST https://api.telegram.org/bot7267336172:AAEYaEeY0i7DfbL7SsRjPf09N67mvLo8WC4/sendMessage \
              -d chat_id="$chat_id" \
              -d parse_mode="Markdown" \
              --data-urlencode text="$MESSAGE"
          }

          # Send to all chats
          send_message "$CHAT_1" "Pocket Network Bot Testing Group"
          send_message "$CHAT_2" "BitGet <> Pocket Network (POKT)"
          send_message "$CHAT_3" "ByBit <> POKT"
          send_message "$CHAT_4" "CoinEx <> POKT"
          send_message "$CHAT_5" "Mr. Yang <> Grove / POKT"
          send_message "$CHAT_6" "MEXC <> POKT"
          send_message "$CHAT_7" "OKX <> Pocket Network"
          send_message "$CHAT_8" "OrangeX <> Grove (POKT)"
          send_message "$CHAT_9" "POKT & Gate.io"
          send_message "$CHAT_10" "POKT Network | AscendEX"
          send_message "$CHAT_11" "Uphold <> Grove (POKT)"
          send_message "$CHAT_12" "Pokt <> Kraken {EF introduction}"
          send_message "$CHAT_13" "Bitrue & Pocket Network"
          send_message "$CHAT_14" "HTX <> POKT"
          send_message "$CHAT_15" "POKT <> Upbit"
          send_message "$CHAT_16" "KuCoin <> POKT"
