name: Release artifacts

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      custom_tag:
        description: "Optional custom tag to add to the image (will be prefixed with branch name)"
        type: string
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  release-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0" # Per https://github.com/ignite/cli/issues/1674#issuecomment-1144619147

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.3"

      - name: Install cross-compilers for CGO (linux/amd64 + linux/arm64)
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-x86-64-linux-gnu

      - name: install ignite
        # The ignite tarballs are named like ignite_29.0.0-rc.1_Linux_x86_64.tar.gz
        run: make ignite_install

      - name: Install CI dependencies
        run: make install_ci_deps

      # Proto generation is skipped (tracked in repo)
      # - name: Generate protobufs
      #   run: make proto_regen

      - name: Build and extract binaries for container build
        run: |
          make ignite_update_ldflags
          # Builds both:
          #   - CGO_DISABLED (linux+darwin) -> normal names
          #   - CGO_ENABLED (linux)        -> *_cgo names
          make ignite_release
          make ignite_release_repackage
          make ignite_release_extract_binaries
          make cosmovisor_cross_compile

      - name: Free disk space
        run: |
          echo "=== Disk usage before cleanup ==="
          df -h
          # Remove unnecessary tools and files
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          echo "=== Disk usage after cleanup ==="
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # For version tag pushes
      - name: Docker Metadata action for tag events
        id: meta-tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=tag,suffix=-prod
            type=sha,suffix=-prod
            type=sha,format=long,suffix=-prod

      - name: Docker Metadata action for tag events (CGO)
        id: meta-tag-cgo
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=semver,pattern={{version}},suffix=-cgo
            type=semver,pattern={{major}}.{{minor}},suffix=-cgo
            type=ref,event=tag,suffix=-prod-cgo
            type=sha,suffix=-prod-cgo
            type=sha,format=long,suffix=-prod-cgo

      # For main branch pushes
      - name: Docker Metadata action for main branch pushes
        id: meta-main
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=main-prod
            type=sha,suffix=-main-prod
            type=sha,format=long,suffix=-main-prod

      - name: Docker Metadata action for main branch pushes (CGO)
        id: meta-main-cgo
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=main-prod-cgo
            type=sha,suffix=-main-prod-cgo
            type=sha,format=long,suffix=-main-prod-cgo

      # For manual workflow triggers
      - name: Extract branch name
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Docker Metadata action for manual workflow_dispatch
        id: meta-manual
        if: github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=${{ env.BRANCH_NAME }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}
            type=sha,suffix=-${{ env.BRANCH_NAME }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}

      - name: Docker Metadata action for manual workflow_dispatch (CGO)
        id: meta-manual-cgo
        if: github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=${{ env.BRANCH_NAME }}-prod-cgo${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}
            type=sha,suffix=-${{ env.BRANCH_NAME }}-prod-cgo${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # For version tag pushes
      - name: Build and push Docker image for tag events
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-tag.outputs.tags }}
          labels: ${{ steps.meta-tag.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      - name: Build and push Docker image for tag events (CGO)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-tag-cgo.outputs.tags }}
          labels: ${{ steps.meta-tag-cgo.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          build-args: |
            BIN_PREFIX=release_binaries/pocket_cgo_linux

      # For main branch pushes
      - name: Build and push Docker image for main branch
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      - name: Build and push Docker image for main branch (CGO)
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-main-cgo.outputs.tags }}
          labels: ${{ steps.meta-main-cgo.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          build-args: |
            BIN_PREFIX=release_binaries/pocket_cgo_linux

      # For manual workflow triggers
      - name: Build and push Docker image for manual workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-manual.outputs.tags }}
          labels: ${{ steps.meta-manual.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      - name: Build and push Docker image for manual workflow_dispatch (CGO)
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-manual-cgo.outputs.tags }}
          labels: ${{ steps.meta-manual-cgo.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          build-args: |
            BIN_PREFIX=release_binaries/pocket_cgo_linux

      # Only publish GitHub releases for tag events
      - name: Add release and publish binaries
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: |
            release/*
