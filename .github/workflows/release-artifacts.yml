name: Release artifacts

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      custom_tag:
        description: "Optional custom tag to add to the image (will be prefixed with branch name)"
        type: string
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  release-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0" # Per https://github.com/ignite/cli/issues/1674#issuecomment-1144619147

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.3"

      - name: install ignite
        run: |
          make ignite_install

      - name: Install CI dependencies
        run: make install_ci_deps

      # This is commented out because proto generated code is now tracked in the
      # repo so this step is skipped.
      # TODO_IMPROVE(@okdas): Have a step that regenerates the proto files and ensures
      # if they are up to date. See https://github.com/pokt-network/poktroll/pull/544#issuecomment-2123063491
      # - name: Generate protobufs
      #   run: make proto_regen

      - name: Build and extract binaries for container build
        run: |
          make ignite_update_ldflags
          make ignite_release
          make ignite_release_repackage
          make ignite_release_extract_binaries
          make cosmovisor_cross_compile

      # Publish binaries to GitHub Releases ASAP after they are built, reuse them for Docker builds later.
      - name: Add release and publish binaries
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: |
            release/*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # For version tag pushes
      - name: Docker Metadata action for tag events
        id: meta-tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=tag,suffix=-prod
            type=sha,suffix=-prod
            type=sha,format=long,suffix=-prod

      # For main branch pushes
      - name: Docker Metadata action for main branch pushes
        id: meta-main
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=main-prod
            type=sha,suffix=-main-prod
            type=sha,format=long,suffix=-main-prod

      # For manual workflow triggers
      - name: Extract branch name
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Docker Metadata action for manual workflow_dispatch
        id: meta-manual
        if: github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          # TODO_MAINNET_MIGRATION(@okdas): Remove poktrolld
          images: |
            ghcr.io/pokt-network/pocketd
            ghcr.io/pokt-network/poktrolld
          tags: |
            type=raw,value=${{ env.BRANCH_NAME }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}
            type=sha,suffix=-${{ env.BRANCH_NAME }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # For version tag pushes
      - name: Build and push Docker image for tag events
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-tag.outputs.tags }}
          labels: ${{ steps.meta-tag.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      # For main branch pushes
      - name: Build and push Docker image for main branch
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      # For manual workflow triggers
      - name: Build and push Docker image for manual workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-manual.outputs.tags }}
          labels: ${{ steps.meta-manual.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      # Build debug images after release images (leveraging cache and built images)

      # For version tag pushes - Debug image
      - name: Docker Metadata action for debug image - tag events
        id: meta-debug-tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          images: |
            ghcr.io/pokt-network/pocketd
          tags: |
            type=semver,pattern={{version}},suffix=-debug
            type=semver,pattern={{major}}.{{minor}},suffix=-debug
            type=ref,event=tag,suffix=-debug
            type=sha,suffix=-debug
            type=sha,format=long,suffix=-debug

      - name: Build and push Debug Docker image for tag events
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-debug-tag.outputs.tags }}
          labels: ${{ steps.meta-debug-tag.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.debug
          build-args: |
            RELEASE_IMAGE=ghcr.io/pokt-network/pocketd:${{ github.ref_name }}-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      # For main branch pushes - Debug image
      - name: Docker Metadata action for debug image - main branch
        id: meta-debug-main
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          images: |
            ghcr.io/pokt-network/pocketd
          tags: |
            type=raw,value=main-debug
            type=sha,suffix=-main-debug
            type=sha,format=long,suffix=-main-debug

      - name: Build and push Debug Docker image for main branch
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-debug-main.outputs.tags }}
          labels: ${{ steps.meta-debug-main.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.debug
          build-args: |
            RELEASE_IMAGE=ghcr.io/pokt-network/pocketd:main-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      # For manual workflow triggers - Debug image
      - name: Docker Metadata action for debug image - manual workflow_dispatch
        id: meta-debug-manual
        if: github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          images: |
            ghcr.io/pokt-network/pocketd
          tags: |
            type=raw,value=${{ env.BRANCH_NAME }}-debug${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}
            type=sha,suffix=-${{ env.BRANCH_NAME }}-debug${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}

      - name: Build and push Debug Docker image for manual workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta-debug-manual.outputs.tags }}
          labels: ${{ steps.meta-debug-manual.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.debug
          build-args: |
            RELEASE_IMAGE=ghcr.io/pokt-network/pocketd:${{ env.BRANCH_NAME }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
