# This Dockerfile is used to build container image for production workloads.
# The image depends on `cosmovisor_cross_compile`, `ignite_release` and `ignite_release_extract_binaries` make targets.
#
# NOTE: This image embeds pre-built binaries from release_binaries/.
# The default (BIN_PREFIX=release_binaries/pocket_linux) uses CGO=0 builds for
# portability. Pass BIN_PREFIX=release_binaries/pocket_cgo_linux to produce a
# CGO-enabled image.

# Stage 1: Binary selection stage
FROM busybox:stable AS binary-selector
ARG TARGETARCH
ARG BIN_PREFIX=release_binaries/pocket_linux

# Copy only the pocket binaries (reduces context size)
COPY release_binaries/pocket* /tmp/release_binaries/
COPY tmp/cosmovisor-linux-* /tmp/

# Select the correct binary for the architecture
RUN set -eu; \
    # Try different naming patterns (ignite sometimes adds extra underscores) \
    found=0; \
    if echo "${BIN_PREFIX}" | grep -q "cgo"; then \
        # Try both double underscore (old) and single underscore (fixed) patterns for CGO \
        for pattern in "pocket_cgo__linux_${TARGETARCH}" "pocket_cgo_linux_${TARGETARCH}"; do \
            binary_name="/tmp/release_binaries/${pattern}"; \
            if [ -f "${binary_name}" ]; then \
                cp "${binary_name}" /tmp/pocketd; \
                chmod 755 /tmp/pocketd; \
                found=1; \
                break; \
            fi; \
        done; \
    else \
        # Non-CGO builds: pocket_linux_arch \
        binary_name="/tmp/release_binaries/pocket_linux_${TARGETARCH}"; \
        if [ -f "${binary_name}" ]; then \
            cp "${binary_name}" /tmp/pocketd; \
            chmod 755 /tmp/pocketd; \
            found=1; \
        fi; \
    fi; \
    if [ ${found} -eq 0 ]; then \
        echo "pocketd binary not found for TARGETARCH=${TARGETARCH} (BIN_PREFIX=${BIN_PREFIX})" >&2; \
        echo "Available artifacts:" >&2; \
        find /tmp/release_binaries -maxdepth 1 -type f -exec basename {} \; >&2 || true; \
        exit 1; \
    fi; \
    cp /tmp/cosmovisor-linux-${TARGETARCH} /tmp/cosmovisor; \
    chmod 755 /tmp/cosmovisor

# Stage 2: Final runtime image
FROM debian:bookworm
ARG TARGETARCH

# Minimal runtime deps
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Use `1025` G/UID so users can switch between this and `heighliner` image without chown.
# Ref: https://github.com/strangelove-ventures/heighliner
RUN groupadd -g 1025 pocket && useradd -u 1025 -g pocket -m -s /sbin/nologin pocket

# Copy the selected binaries from the selector stage
COPY --from=binary-selector --chown=pocket:pocket /tmp/pocketd /bin/pocketd
COPY --from=binary-selector --chown=pocket:pocket /tmp/cosmovisor /bin/cosmovisor

# Optional runtime tuning
# ENV GODEBUG="madvdontneed=1"
# ENV GOGC="50"

USER pocket
ENTRYPOINT ["pocketd"]
